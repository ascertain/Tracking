<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SeleniumBase</name>
    </assembly>
    <members>
        <member name="T:SeleniumBase.BrowserStartUpOptions">
            <summary>
                Specify options on start browserType
            </summary>
        </member>
        <member name="M:SeleniumBase.BrowserStartUpOptions.Equals(SeleniumBase.BrowserStartUpOptions)">
            <summary>
            Determines wether the specified <see cref="T:SeleniumBase.BrowserStartUpOptions"/> is equal to the current <see cref="T:SeleniumBase.BrowserStartUpOptions"/>.
            </summary>
            <param name="other">The object to compare with current object.</param>
            <returns>True if the specified <see cref="T:SeleniumBase.BrowserStartUpOptions"/> is equal to the current <see cref="T:SeleniumBase.BrowserStartUpOptions"/>; otherwise, false</returns>
        </member>
        <member name="M:SeleniumBase.BrowserStartUpOptions.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:SeleniumBase.BrowserStartUpOptions.#ctor">
            <summary>
            Default constructor. Sets PluginsDisable = false
            </summary>
        </member>
        <member name="M:SeleniumBase.BrowserStartUpOptions.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="other">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="P:SeleniumBase.BrowserStartUpOptions.WebdriverProxy">
            <summary>
            Specify a proxy server the browserType should use: Default the browserType will not use a proxy
            </summary>
        </member>
        <member name="P:SeleniumBase.BrowserStartUpOptions.PluginsDisabled">
            <summary>
                Unity disabled on startup.
                Supported in Chrome and Firefox
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.IEmailExplorer">
            <summary>
                Email handler for MS Exchange
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetActivationEmail(System.String,System.Int32)">
            <summary>
                Locates activation email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetForgotUsernameEmail(System.String,System.Int32)">
            <summary>
                Locates forgot username email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetAdultWelcomeEmail(System.String,System.Int32)">
            <summary>
                Locates adult welcome email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetTeenWelcomeEmail(System.String,System.Int32)">
            <summary>
                Locates teen welcome email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetResetPasswordEmail(System.String,System.Int32)">
            <summary>
                Locates reset password email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetEmailFromItemId(System.String,System.String,System.Int32)">
            <summary>
                Locates generic email based on given username and sitecore item id and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="itemId">Email Sitecore item id</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetEmail(System.String,System.String,System.Int32)">
            <summary>
                Locates email that comply to the parameters
            </summary>
            <param name="subject">Subject of the email to find</param>
            <param name="bodyContains">A string the email must contain</param>
            <param name="timeOut">Timeout in sec. for how long the search for email will maximum go on</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.GetEmailAndDelete(System.String)">
            <summary>
                Retrieves the first email with specified subject, deletes it and returns a copy of the email
            </summary>
            <param name="subject">Subject of email to retrieve</param>
            <returns>Copy of first found email</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IEmailExplorer.DeleteAllEmailsBySubject(System.String)">
            <summary>
                Deletes all emails with subject that mathces the specified subject
            </summary>
            <param name="subject">Subject that emails match</param>
            <returns>Number of deleted emails</returns>
        </member>
        <member name="T:SeleniumBase.DomainObjects.EmailExplorer">
            <summary>
                Email handler for MS Exchange
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.#ctor(ExchangeMailHandler.IMailServerCommunicator)">
            <summary>
                Constructor used for dependency injection
            </summary>
            <param name="mailServer">An instance of the communicator. Possible a mock.</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetActivationEmail(System.String,System.Int32)">
            <summary>
                Locates activation email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetForgotUsernameEmail(System.String,System.Int32)">
            <summary>
                Locates forgot username email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetAdultWelcomeEmail(System.String,System.Int32)">
            <summary>
                Locates adult welcome email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetTeenWelcomeEmail(System.String,System.Int32)">
            <summary>
                Locates teen welcome email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetResetPasswordEmail(System.String,System.Int32)">
            <summary>
                Locates reset password email that contains the username and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetEmailFromItemId(System.String,System.String,System.Int32)">
            <summary>
                Locates generic email based on given username and sitecore item id and returns the mail body
            </summary>
            <param name="username">Username that the email must contain</param>
            <param name="itemId">Email Sitecore item id</param>
            <param name="timeOut">Time in seconds to wait for email</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetEmail(System.String,System.String,System.Int32)">
            <summary>
                Locates email that comply to the parameters
            </summary>
            <param name="subject">Subject of the email to find</param>
            <param name="bodyContains">A string the email must contain</param>
            <param name="timeOut">Timeout in sec. for how long the search for email will maximum go on</param>
            <returns>Email body as HTML</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.GetEmailAndDelete(System.String)">
            <summary>
                Retrieves the first email with specified subject, deletes it and returns a copy of the email
            </summary>
            <param name="subject">Subject of email to retrieve</param>
            <returns>Copy of first found email</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.EmailExplorer.DeleteAllEmailsBySubject(System.String)">
            <summary>
                Deletes all emails with subject that mathces the specified subject
            </summary>
            <param name="subject">Subject that emails match</param>
            <returns>Number of deleted emails</returns>
        </member>
        <member name="T:SeleniumBase.DomainObjects.ILEGOCookieManager">
            <summary>
                Cookie manager that handles LEGO specific cookies
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOCookieManager.GetAspxAuthCookieName">
            <summary>
                Returns the ASPX auth cookie name for the configured environment
            </summary>
            <returns>E.g. .DEV.ASPXAUTH for DEV</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOCookieManager.GetLsCookieName">
            <summary>
                Returns the L.S cookie name for the configured environment
            </summary>
            <returns>E.g. DEV.L.S for DEV</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOCookieManager.GetLsCookie">
            <summary>
                Returns LS cookie that holds the session and is used with LEGO ID
            </summary>
            <returns>L.S. cookie found in WebDriver cookie list</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOCookieManager.GetNumberedLsCookie">
            <summary>
                Returns the counted LS cookie
            </summary>
            <returns>Counted L.S. cookie found in WebDriver cookie list</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOCookieManager.HasLEGOIdCookies">
            <summary>
            Searches for LEGO ID Cookies on given environment. 
            Live: ".ASPXAUTH" and "L.S", 
            Qa: ".QA.ASPXAUTH" and "QA.L.S", 
            Dev: ".DEV.ASPXAUTH" and "DEV.L.S", 
            Local: ".DEV.ASPXAUTH" and "DEV.L.S". 
            Note: Remember to load a LEGO.com page before calling this method or else 
            the webdriver will not have access to LEGO.com cookies.
            </summary>
            <returns>true if cookies [.DEV|.QA].ASPXAUTH and [DEV.|QA.]L.S is found.</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOCookieManager.SetNpsDisableCookie">
            <summary>
            Sets the NpsSurvey cookie with value of ABCD which should disable the NPS survey for the next 24 hours.
            Remember that for most webdrivers, you will need to set this again when you start it up, because the driver clears the cookies cache on start.
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.ILegoIdExplorer">
            <summary>
                Functionality to login and create different kinds of LEGO ID accounts
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAdult">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAdult(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAdult(System.String)">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAdult(SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <param name="returnUrl">The URL that should be autoredirected to after registration</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAdultAndLogout">
            <summary>
                Registers an adult LEGO ID account and logs out
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAdultAndLogout(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers an adult LEGO ID account and logs out
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterTeenOrAdult(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a teen or adult account according to the specified LEGO ID Information
                Warning: The LEGO ID Information class must contain date and birth for a teen or an adult
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterTeenOrAdult(SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
                Registers a teen or adult account according to the specified LEGO ID Information
                Warning: The LEGO ID Information class must contain date and birth for a teen or an adult
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <param name="returnUrl">The URL that should be autoredirected to after registration</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterUnactivatedChild">
            <summary>
                Registers a child LEGO ID account but does not activate it
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterUnactivatedChild(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a child LEGO ID account according to specified LEGO ID Information but does not activate it
            </summary>
            <param name="legoIdInformation">Details to create the LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterTeen">
            <summary>
                Registers a teen LEGO ID Account
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterLegoId1Adult">
            <summary>
                Registers an adult LEGO ID 1.0 account
            </summary>
            <returns>Username to the created LEGO ID 1.0 account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.Login(System.String,System.String)">
            <summary>
                Attempts to login with the specified username and password
            </summary>
            <param name="username">Username of the user to login</param>
            <param name="password">Password to the user</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.Login(System.String,System.String,System.String)">
            <summary>
                Attempts to login with the specified username and password and returns to the specified return url
            </summary>
            <param name="username">Username of the user to login</param>
            <param name="password">Password to the user</param>
            <param name="returnUrl">The URL that should be autoredirected to after login</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAndActivateChild">
            <summary>
                Registers a child LEGO ID account and activates it
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterAndActivateChild(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a child LEGO ID account and activates it according to the specified LEGO ID Information
            </summary>
            <param name="legoIdInformation">Details to create the LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.GetRandomUsername(System.Int32)">
            <summary>
                Generates a random username
            </summary>
            <param name="usernameSize">The number of chars the random username should consist of</param>
            <returns>
                Random generated string.
                Warning: The username is not guaranteed to be available
            </returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.Login(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Attempts to login with the specified LEGO Id information
            </summary>
            <param name="legoIdInformation">LEGO ID information with username and password</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.Login(SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
                Attempts to login with the specified LEGO Id information
            </summary>
            <param name="legoIdInformation">LEGO ID information with username and password</param>
            <param name="returnUrl">The url to load when login completes</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.IsLoggedIn">
            <summary>
                Returns true if the user is logged in
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.LogOut(System.String)">
            <summary>
                Logs out from LEGO ID
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.ToggleLoginState(System.Boolean,SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
            Logs in to or out from LEGO ID based on loggedInFlag
            </summary>
            <param name="loggedIn">Indicate wanted login state. true will log in if logged out in and false will log out if logged in.</param>
            <param name="legoIdInformation">The user information to use.</param>
            <param name="returnUrl">The driver will load this url when login is complete.</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.CreateUser(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
            Creates a new user via webcliet
            Default password is test123 to the user that is created
            </summary>
            <param name="legoIdInformation">The information that the user will be created from</param>
            <returns>Username of the user created</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.GetLoggedInUserInfo(OpenQA.Selenium.Cookie)">
            <summary>
            Asks LEGO Id service about user info for the session
            </summary>
            <param name="numberedLsCookie">The L.S. cookie that contains the session id</param>
            <returns>LEGOIdInformation object. Not all fields are set due to LEGO Id service only returning a subset of information.</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterLiteUser">
            <summary>
                Registers a LEGO ID Lite account
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILegoIdExplorer.RegisterLiteUser(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a LEGO ID Lite account according to specified LEGO ID Information
            </summary>
            <param name="legoIdInformation">Details to create the LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="T:SeleniumBase.DomainObjects.LEGOCookie">
            <summary>
            Enum for cookie types found on LEGO.com
            </summary>
        </member>
        <member name="F:SeleniumBase.DomainObjects.LEGOCookie.AspxAuth">
            <summary>
            LEGO ID ASPX AUTH
            </summary>
        </member>
        <member name="F:SeleniumBase.DomainObjects.LEGOCookie.Ls">
            <summary>
            LEGO Id LS
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.LEGOCookieManager">
            <summary>
                Cookie manager that handles LEGO specific cookies
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOCookieManager.#ctor(SeleniumBase.Configuration.TestSetting,OpenQA.Selenium.IWebDriver)">
            <summary>
                Constructor for LEGO Cookie Manager
            </summary>
            <param name="setting">TestSetting object with environment property set</param>
            <param name="driver">Instance of IWebDriver that is located on a page (not about:blank) </param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOCookieManager.GetAspxAuthCookieName">
            <summary>
                Returns the ASPX auth cookie name for the configured environment
            </summary>
            <returns>E.g. .DEV.ASPXAUTH for DEV</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOCookieManager.GetLsCookieName">
            <summary>
                Returns the L.S cookie name for the configured environment
            </summary>
            <returns>E.g. DEV.L.S for DEV</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOCookieManager.GetLsCookie">
            <summary>
                Returns LS cookie that holds the session and is used with LEGO ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOCookieManager.GetNumberedLsCookie">
            <summary>
                Returns the counted LS cookie
            </summary>
            <returns>Counted L.S. cookie found in WebDriver cookie list</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOCookieManager.HasLEGOIdCookies">
            <summary>
            Searches for LEGO ID Cookies on given environment. 
            Live: ".ASPXAUTH" and "L.S", 
            Qa: ".QA.ASPXAUTH" and "QA.L.S", 
            Dev: ".DEV.ASPXAUTH" and "DEV.L.S", 
            Local: ".DEV.ASPXAUTH" and "DEV.L.S". 
            Note: Remember to load a LEGO.com page before calling this method or else 
            the webdriver will not have access to LEGO.com cookies.
            </summary>
            <returns>true if cookies [.DEV|.QA].ASPXAUTH and [DEV.|QA.]L.S is found.</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOCookieManager.SetNpsDisableCookie">
            <summary>
            Sets the NpsSurvey cookie with value of ABCD which should disable the NPS survey for the next 24 hours.
            Remember that for most webdrivers, you will need to set this again when you start it up, because the driver clears the cookies cache on start.
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.ILEGOIDActivator">
            <summary>
                Handles functionality regarding activating an unactivated account
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOIDActivator.Activate(System.String)">
            <summary>
                Searches for activation email and activates the specified LEGO ID username
            </summary>
            <param name="username">Username that the email must contain to be considered the correct one</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOIDActivator.Activate(System.String,SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Searches for activation email and activates the specified LEGO ID username
            </summary>
            <param name="username">Username that the email must contain to be considered the correct one</param>
            <param name="legoIdInformation">Information that is used on activation page</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ILEGOIDActivator.GetActivationUrl(System.String)">
            <summary>
                Finds the link in the activation email
            </summary>
            <param name="username">Username that the email must contain to be considered the correct one</param>
            <returns>URL to the activation page where activation can be continued</returns>
        </member>
        <member name="T:SeleniumBase.DomainObjects.LEGOIDActivator">
            <summary>
                Handles functionality regarding activating an unactivated account
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOIDActivator.#ctor(SeleniumBase.DomainObjects.IEmailExplorer,OpenQA.Selenium.IWebDriver)">
            <summary>
                Constructs LEGO ID Activator helper
            </summary>
            <param name="emailExplorer">Must be configured to get access to the inbox where activation email will arrive</param>
            <param name="driver">Instantiated IWebDriver that is used for navigating the pages during activation</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOIDActivator.Activate(System.String)">
            <summary>
                Searches for activation email and activates the specified LEGO ID username
            </summary>
            <param name="username">Username that the email must contain to be considered the correct one</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOIDActivator.Activate(System.String,SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Searches for activation email and activates the specified LEGO ID username
            </summary>
            <param name="username">Username that the email must contain to be considered the correct one</param>
            <param name="legoIdInformation">Information that is used on activation page</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOIDActivator.GetActivationUrl(System.String)">
            <summary>
                Finds the link in the activation email
            </summary>
            <param name="username">Username that the email must contain to be considered the correct one</param>
            <returns>URL to the activation page where activation can be continued</returns>
        </member>
        <member name="T:SeleniumBase.DomainObjects.LegoIdExplorer">
            <summary>
                Functionality to login and create different kinds of LEGO ID accounts
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.#ctor(OpenQA.Selenium.IWebDriver,SeleniumBase.DomainObjects.IUrlHandler,SeleniumBase.DomainObjects.ILEGOIDActivator,SeleniumBase.Services.IThreadServices,SeleniumBase.DomainObjects.ILEGOCookieManager,SeleniumBase.Configuration.TestSetting)">
            <summary>
            Constructor
            </summary>
            <param name="driver">Instance of IWebDriver</param>
            <param name="urlHandler">Instance of LEGO Web Manager</param>
            <param name="legoidActivator">Instance of LEGO Id Activator</param>
            <param name="threadServices">Instance of IThreadServices</param>
            <param name="cookieManager">Instance of ICookieManager</param>
            <param name="settings">Instance of TestSetting</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAdult">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAdult(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAdult(System.String)">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAdult(SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
                Registers an adult LEGO ID Account and stays logged in
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <param name="returnUrl">The URL that should be autoredirected to after registration</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAdultAndLogout">
            <summary>
                Registers an adult LEGO ID account and logs out
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAdultAndLogout(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers an adult LEGO ID account and logs out
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterTeenOrAdult(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a teen or adult account according to the specified LEGO ID Information
                Warning: The LEGO ID Information class must contain date and birth for a teen or an adult
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterTeenOrAdult(SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
                Registers a teen or adult account according to the specified LEGO ID Information
                Warning: The LEGO ID Information class must contain date and birth for a teen or an adult
            </summary>
            <param name="legoIdInformation">Details to create a LEGO ID account from</param>
            <param name="returnUrl">The URL that should be autoredirected to after registration</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.CreateUser(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
            Creates a new user via webcliet
            Default password is test123 to the user that is created
            </summary>
            <param name="legoIdInformation">The information that the user will be created from</param>
            <returns>Username of the user created</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.GetLoggedInUserInfo(OpenQA.Selenium.Cookie)">
            <summary>
            Asks LEGO Id service about user info for the session
            </summary>
            <param name="numberedLsCookie">The L.S. cookie that contains the session id</param>
            <returns>LEGOIdInformation object. Not all fields are set due to LEGO Id service only returning a subset of information.</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterUnactivatedChild">
            <summary>
                Registers a child LEGO ID account but does not activate it
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterUnactivatedChild(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a child LEGO ID account according to specified LEGO ID Information but does not activate it
            </summary>
            <param name="legoIdInformation">Details to create the LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterLiteUser">
            <summary>
                Registers a LEGO ID Lite account
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterLiteUser(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a LEGO ID Lite account according to specified LEGO ID Information
            </summary>
            <param name="legoIdInformation">Details to create the LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.GetRandomUsername(System.Int32)">
            <summary>
                Generates a random username
            </summary>
            <param name="usernameSize">The number of chars the random username should consist of</param>
            <returns>
                Random generated string.
                Warning: The username is not guaranteed to be available
            </returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterTeen">
            <summary>
                Registers a teen LEGO ID Account
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAndActivateChild">
            <summary>
                Registers a child LEGO ID account and activates it
            </summary>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterAndActivateChild(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Registers a child LEGO ID account and activates it according to the specified LEGO ID Information
            </summary>
            <param name="legoIdInformation">Details to create the LEGO ID account from</param>
            <returns>Username to the created LEGO ID account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RegisterLegoId1Adult">
            <summary>
                Registers an adult LEGO ID 1.0 account
            </summary>
            <returns>Username to the created LEGO ID 1.0 account</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.Login(SeleniumBase.DomainObjects.LEGOIdInformation)">
            <summary>
                Attempts to login with the specified LEGO Id information
            </summary>
            <param name="legoIdInformation">LEGO ID information with username and password</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.Login(SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
                Attempts to login with the specified LEGO Id information
            </summary>
            <param name="legoIdInformation">LEGO ID information with username and password</param>
            <param name="returnUrl">The url to load when login completes</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.Login(System.String,System.String)">
            <summary>
                Attempts to login with the specified username and password
            </summary>
            <param name="username">Username of the user to login</param>
            <param name="password">Password to the user</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.Login(System.String,System.String,System.String)">
            <summary>
                Attempts to login with the specified username and password and returns to the specified return url
            </summary>
            <param name="username">Username of the user to login</param>
            <param name="password">Password to the user</param>
            <param name="returnUrl">The URL that should be autoredirected to after login</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.IsLoggedIn">
            <summary>
                Returns true if the user is logged in
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.LogOut(System.String)">
            <summary>
                Logs out from LEGO ID.
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.ToggleLoginState(System.Boolean,SeleniumBase.DomainObjects.LEGOIdInformation,System.String)">
            <summary>
            Logs in to or out from LEGO ID based on loggedInFlag
            </summary>
            <param name="loggedIn">Indicate wanted login state. true will log in if logged out in and false will log out if logged in.</param>
            <param name="legoIdInformation">The user information to use.</param>
            <param name="returnUrl">The driver will load this url when login is complete.</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.RandomString(System.Int32)">
            <summary>
                Generates random string by specified size
            </summary>
            <param name="size">Number of chars the string should consist of</param>
            <returns>Random generated string</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.InsertChildInformationOnPage2(SeleniumBase.Pages.RegistrationPage,SeleniumBase.DomainObjects.LEGOIdInformation@)">
            <summary>
                Inserts the specified LEGO ID information into the second page of LEGO ID Registration page
            </summary>
            <param name="registrationPage">The registration page that is to perform the actions</param>
            <param name="legoIdInformation">Details to insert on page 2 about the LEGO ID</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.ByteArrayToHexString(System.Byte[])">
            <summary>
            Converts a byte array to hex based string 
            </summary>
            <param name="bytes">Byte array to convert</param>
            <returns>Hex based string</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.HexToByteArray(System.String)">
            <summary>
            Converts a hex based string to byte array
            </summary>
            <param name="hexNumberText">Hex based string to convert</param>
            <returns>Byte array</returns>
            <exception cref="T:System.ArgumentNullException">Throws if hexNumberText parameter is null</exception>
            <exception cref="T:System.ArgumentException">Throws if parameters does not contain a even count of hex numbers</exception>
        </member>
        <member name="T:SeleniumBase.DomainObjects.LegoIdExplorer.AesParameters">
            <summary>
            LEGO Id encryption parameters
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.AesParameters.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LegoIdExplorer.AesParameters.#ctor(System.Guid)">
            <summary>
            Constructor that sets Key and IV
            </summary>
            <param name="seed">Guid that the properties should be calculated from</param>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LegoIdExplorer.AesParameters.Iv">
            <summary>
            IV property
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LegoIdExplorer.AesParameters.Key">
            <summary>
            Key property
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.LEGOIdInformation">
            <summary>
                LEGO ID Information class where detailed information can be specified
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.UserInformation">
            <summary>
            Class to handle userinformation
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.UserInformation.#ctor">
            <summary>
            Constructs a UserInformation object.
            Initializes cookie dictionary
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.UserInformation.Cookies">
            <summary>
            Store cookies belonging to user
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOIdInformation.#ctor">
            <summary>
            Contructor for LEGO Id Information.
            Initializes all fields with default values
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOIdInformation.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.Age">
            <summary>
                Date of birth
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.CountryCode">
            <summary>
                Country code
                E.g. DK
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.Email">
            <summary>
                Email address
                E.g. qa.department@lego.com
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.Gender">
            <summary>
                Gender
                E.g. male
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.AcceptTos">
            <summary>
                Flag that indicates if the ToS should be accepted
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.Password">
            <summary>
                Password
                E.g. S3cr3t
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.ConfirmPassword">
            <summary>
                Password that should be used as confirm password
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.Username">
            <summary>
                Username (4-14 chars)
                E.g. Selenium
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOIdInformation.TermsOfServiceVersion">
            <summary>
                Terms of service version. Format [A-Z]{4}[0-9]{4}
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.RandomizedPartOfUsernameFactory.RandomizeUsername">
            <summary>
            Returns correctly seeded randomized username part
            </summary>
            <returns>Random instance</returns>
        </member>
        <member name="T:SeleniumBase.Enums.BrowserType">
            <summary>
                Available browsers to use for testing
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.BrowserType.Chrome">
            <summary>
                Google Chrome
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.BrowserType.InternetExplorer">
            <summary>
                MS Internet Explorer
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.BrowserType.Firefox">
            <summary>
                Mozilla FireFox
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.BrowserType.PhantomJs">
            <summary>
                PhantomJS (Headless browserType)
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.IUrlHandler">
            <summary>
                Weblinks manager that can add configured locales and convert to configured environment
                Also acts as a phonebook for sites on LEGO.com
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IUrlHandler.ConvertUrlToEnvironment(System.String)">
            <summary>
                Converts URL to the configured environment
            </summary>
            <param name="url">URL without environment. E.g. http://www.lego.com </param>
            <returns>URL with configured environment. E.g. http://www.webqa.lego.com </returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IUrlHandler.AddLocaleToUrl(System.String)">
            <summary>
                Adds cofigured locale to URL
            </summary>
            <param name="url">URL without locale specified. E.g. http://www.lego.com/chima </param>
            <returns>URL with configured locale. E.g. http://www.lego.com/en-us/chima </returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IUrlHandler.GetCountryCodeForDefaultLocale">
            <summary>
                Returns the country code that corresponds to the locale set in TestSettings
            </summary>
            <returns>Country code for country. E.g. "DK" or "UK"</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IUrlHandler.GetDecoratedBaseUrl">
            <summary>
            Returns the base URL, that is specified in the TestSetting object, converted to target environment and added the target locale.
            E.g. http://www.lego.com with environment DEV and locale da-dk will be decorated to http://www.dev.corp.lego.com/da-dk/
            </summary>
            <returns>URL that is converted to target environment and added target locale</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IUrlHandler.DecorateUrl(System.String)">
            <summary>
            Converts a URL to target environment and add target locale to it.
            E.g. http://www.lego.com with environment DEV and locale da-dk will be decorated to http://www.dev.corp.lego.com/da-dk/
            </summary>
            <param name="liveUrl">Url to convert. Should be LIVE url.</param>
            <returns>Url converted to target environment and added target locale.</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IUrlHandler.TransformRelativeUrl(System.String)">
            <summary>
            Generates a complete URL based on Environment, BaseUrl and Locale from testsettings
            </summary>
            <param name="relativeUrl">The relative path that a URL should be generated from</param>
            <returns>Decorated base URL with relative path appended</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.IUrlHandler.DecorateUrlForThirdParty(System.String)">
            <summary>
            Decorates a URL to the environment and locale that is specified in test settings
            Honors the UseDevInsteadOfLocalServices setting, meaning it will convert to DEV URL instead of Local URL
            </summary>
            <param name="liveUrl">URL to decorate</param>
            <returns>URL decorated with environment and locale</returns>
        </member>
        <member name="P:SeleniumBase.DomainObjects.IUrlHandler.Settings">
            <summary>
            The test settings that this instance is configured to use
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.LEGOUrlHandler">
            <summary>
                LEGO.com weblinks manager and phonebook for sites located on the domain
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.#ctor(SeleniumBase.Configuration.TestSetting)">
            <summary>
                Constructs the LEGOUrlHandler
            </summary>
            <param name="setting">Settings with environment, locale and base url specified</param>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.ConvertUrlToEnvironment(System.String)">
            <summary>
                Converts URL to the configured environment
            </summary>
            <param name="url">URL without environment. E.g. http://www.lego.com </param>
            <returns>URL with configured environment. E.g. http://www.webqa.lego.com </returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.ConvertUrToEnvironmet(System.String,SeleniumBase.Enums.LEGOEnvironment)">
            <summary>
                Converts URL to the target environment
            </summary>
            <param name="url">URL without environment. E.g. http://www.lego.com </param>
            <param name="targetEnvironment">Environment to convert URL to.</param>
            <returns>URL with configured environment. E.g. http://www.webqa.lego.com </returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.AddLocaleToUrl(System.String)">
            <summary>
                Adds cofigured locale to URL
            </summary>
            <param name="url">URL without locale specified. E.g. http://www.lego.com/chima </param>
            <returns>URL with configured locale. E.g. http://www.lego.com/en-us/chima </returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.GetCountryCodeForDefaultLocale">
            <summary>
                Returns the country code that corresponds to the locale set in TestSettings
            </summary>
            <returns>Country code for country. E.g. "DK" or "UK"</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.GetDecoratedBaseUrl">
            <summary>
            Returns the base URL, that is specified in the TestSetting object, converted to target environment and added the target locale.
            E.g. http://www.lego.com with environment DEV and locale da-dk will be decorated to http://www.dev.corp.lego.com/da-dk
            </summary>
            <returns>URL that is converted to target environment and added target locale</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.DecorateUrl(System.String)">
            <summary>
            Converts a URL to target environment and add target locale to it.
            E.g. http://www.lego.com with environment DEV and locale da-dk will be decorated to http://www.dev.corp.lego.com/da-dk
            </summary>
            <param name="liveUrl">Url to convert. Should be LIVE url.</param>
            <returns>Url converted to target environment and added target locale.</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.TransformRelativeUrl(System.String)">
            <summary>
            Generates a complete URL based on Environment, BaseUrl and Locale from testsettings
            </summary>
            <param name="relativeUrl">The relative path that a URL should be generated from.</param>
            <returns>Decorated base URL with relative path appended.</returns>
        </member>
        <member name="M:SeleniumBase.DomainObjects.LEGOUrlHandler.DecorateUrlForThirdParty(System.String)">
            <summary>
            Decorates a URL to the environment and locale that is specified in test settings
            Honors the UseDevInsteadOfLocalServices setting, meaning it will convert to DEV URL instead of Local URL
            </summary>
            <param name="liveUrl">URL to decorate</param>
            <returns>URL decorated with environment and locale</returns>
        </member>
        <member name="P:SeleniumBase.DomainObjects.LEGOUrlHandler.Settings">
            <summary>
            The test settings that this instance is configured to use
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.IScreenShotRemoteWebDriver">
            <summary>
                Interface that enables screenshot capabilities on remote webdriver
            </summary>
        </member>
        <member name="P:SeleniumBase.DomainObjects.IScreenShotRemoteWebDriver.WebDriverType">
            <summary>
                Returns the instantiated remote webdriver type.
                E.g. Chrome.
            </summary>
        </member>
        <member name="T:SeleniumBase.DomainObjects.ScreenShotRemoteWebDriver">
            <summary>
                Remote WebDriver that implements screenshot functionality
            </summary>
        </member>
        <member name="M:SeleniumBase.DomainObjects.ScreenShotRemoteWebDriver.#ctor(System.Uri,OpenQA.Selenium.ICapabilities)">
            <summary>
                Constructs the remote WebDriver
            </summary>
            <param name="serverAddress">Address to the Selenium hub</param>
            <param name="capabilities">Capabilities that the remote WebDriver should have</param>
        </member>
        <member name="P:SeleniumBase.DomainObjects.ScreenShotRemoteWebDriver.WebDriverType">
            <summary>
                Returns the instantiated remote webdriver type.
                E.g. Chrome.
            </summary>
        </member>
        <member name="T:SeleniumBase.Enums.LEGOEnvironment">
            <summary>
                Available LEGO Environments
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.LEGOEnvironment.Live">
            <summary>
                Represents the LIVE environment
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.LEGOEnvironment.Qa">
            <summary>
                Represents the QA environment
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.LEGOEnvironment.Dev">
            <summary>
                Represents the DEV environment
            </summary>
        </member>
        <member name="F:SeleniumBase.Enums.LEGOEnvironment.Local">
            <summary>
            Represents the local environment
            </summary>
        </member>
        <member name="T:SeleniumBase.Extensions.StringExtensions">
            <summary>
            Extensions for converting string objects to Selenium By objects
            </summary>
        </member>
        <member name="M:SeleniumBase.Extensions.StringExtensions.ToByXPath(System.String)">
            <summary>
            Converts a string xpath into By.XPath object
            </summary>
            <param name="target">String that represents XPath</param>
            <returns>XPath object that can be used by Selenium</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.StringExtensions.ToById(System.String)">
            <summary>
            Converts a string into By.Id object
            </summary>
            <param name="target">String that represents Id of element</param>
            <returns>Id object that can be used by Selenium</returns>
        </member>
        <member name="T:SeleniumBase.Extensions.WebDriverExtensions">
            <summary>
            Extensions for Selenium WebDriver
            </summary>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.WaitForElementByCssClassname(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Makes WebDriver wait for an element to appear. Waits max. 8 seconds
            </summary>
            <param name="driver">WebDriver to perform the wait</param>
            <param name="cssclassname">Classname of the element to wait for</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.WaitForElementById(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Makes WebDriver wait for an element to appear. Waits max. 8 seconds
            </summary>
            <param name="driver">WebDriver to perform the wait</param>
            <param name="id">Id of the element to wait for</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.WaitForElementByText(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Makes WebDriver wait for an element to appear. Waits max. 8 seconds
            </summary>
            <param name="driver">WebDriver to perform the wait</param>
            <param name="id">Text of the element to wait for</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.IsElementPresent(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Determines of the element is present on current page
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">Selector for the element to test for</param>
            <returns>True if element is present on page. False if element could not be found on page.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.GetLink(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Return the link found in the href attribute of an element
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">Selector for the element</param>
            <returns>Link found in the href attribute. Null if element could not be found.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.GetSelectElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Finds a web element and wraps it into a Selenium SelectElement
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">Locator for the select element to find</param>
            <returns>A Seleniun SelectElement</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.GetElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Finds a element and throws a ElementNotVisible exception if it cannot be found.
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">Locator for the element to find</param>
            <returns>Selenium WebElement if it is found. Throws exception if not.</returns>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException"></exception>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.GetImage(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Returns the src attribute of a webelement
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">Locator for the element to extract src attribute</param>
            <returns>Value found in src attribute of web element. Returns null if element could not be found.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.GetText(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Return the title attribute of a web element
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">Locator for the web element</param>
            <returns>Value in title attribute. Returns null if element could not be found.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.SetUserLocation(OpenQA.Selenium.IWebDriver,System.String,System.String)">
            <summary>
            Sets a cookie that instructs LEGO.com to treat the browserType as if it was having an IP of a target country.
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="countryCode">The country code of the targeted country. Eg. DK.</param>
            <param name="domain">The domain the cookie should use. Eg. lego.com</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.SetMarketPrefCookie(OpenQA.Selenium.IWebDriver,System.String,System.String)">
            <summary>
            Sets a cookie that instructs LEGO.com to use a certain market for the browserType.
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="siteCulture">The locale to use. Eg. da-DK.</param>
            <param name="domain">The domain the cookie should use. Eg. lego.com</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.SwitchToIframe(OpenQA.Selenium.IWebDriver)">
            <summary>
            Switches focus to the first iframe found on webpage. If there are multiple iframes on page it will switch to the one that contains "market" or "changeregion" in their source.
            </summary>
            <param name="driver">The WebDriver to use.</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.AcceptAlert(OpenQA.Selenium.IWebDriver)">
            <summary>
            Keeps accepting alertboxes on the page until there are no more. If none is present it will not do anything.
            </summary>
            <param name="driver">The WebDriver to use.</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.CancelAlert(OpenQA.Selenium.IWebDriver)">
            <summary>
            Keeps cancelling alertboxes on the page until there are no more. If none is present it will not do anything.
            </summary>
            <param name="driver">The WebDriver to use.</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.IsAlertPresent(OpenQA.Selenium.IWebDriver)">
            <summary>
            Detects if an alertbox is present on the page.
            </summary>
            <param name="driver">The WebDriver to use.</param>
            <returns>True if an alertbox was found. False if no alertboxes could be found.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.TakeScreenshot(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Takes a screenshot of the current page.
            </summary>
            <param name="driver">The WebDriver to use.</param>
            <param name="saveLocation">Location on file system where the screenshot should be saved.</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.DisableFlashPluginOnChrome(OpenQA.Selenium.IWebDriver)">
            <summary>
            Disables the flashplugin in Google Chrome via the chrome://plugins tab
            </summary>
            <param name="driver">The WebDriver to use</param>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.IsErrorPage(OpenQA.Selenium.IWebDriver)">
            <summary>
            Detects if the current page is a LEGO.com error page.
            </summary>
            <param name="driver">The WebDriver to use.</param>
            <returns>True if the current page contains the image of cable guy. False if the current page does not contain cable guy.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.GetLinks(OpenQA.Selenium.IWebDriver,System.String,System.String)">
            <summary>
            Navigates to the URL and finds all the links on the page.
            </summary>
            <param name="driver">The WebDriver to use.</param>
            <param name="pageUrl">The URL to navigate to</param>
            <param name="predicate">The predicate that the link should start with.</param>
            <returns>A list of all the links found that matches the predicate.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.GetLinkAttr(OpenQA.Selenium.IWebElement)">
            <summary>
            Returns the value found in href attribute of an webElement
            </summary>
            <param name="element">The element to extract attribute from</param>
            <returns>Value in href attribute. string.Empty if StaleElementReferenceException is thrown.</returns>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.RetryFindElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By,System.Int32)">
            <summary>
            Tries to find an element for the amount of retries passed. For each retry it will sleep for 200 ms before trying again.
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">The locator for the element that should be found.</param>
            <param name="retries">The number of retries that should be used</param>
            <returns>The webelement that was requested</returns>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">If the element could not be found within the number of retries this exception is thrown.</exception>
        </member>
        <member name="M:SeleniumBase.Extensions.WebDriverExtensions.RetryFindElement(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Tries to find an element for within maximum 20 times. For each retry it will sleep for 200 ms before trying again.
            </summary>
            <param name="driver">The WebDriver to use</param>
            <param name="by">The locator for the element to find.</param>
            <returns>The Selenium Webelement requested. If none could be found an ElementNotVisibleException is thrown.</returns>
        </member>
        <member name="T:SeleniumBase.ImageFileSource">
            <summary>
            Handler for setting correct screenshots in Allure report
            </summary>
        </member>
        <member name="M:SeleniumBase.ImageFileSource.#ctor(System.String)">
            <summary>
            Sets the logging directory to use for finding screenshots
            </summary>
            <param name="logDir"></param>
        </member>
        <member name="M:SeleniumBase.ImageFileSource.GetImage">
            <summary>
            Finds the latest image in logging directory (.jpg or .png) and reads it into bytes
            </summary>
            <returns>Bytes of the latest screenshot in logging directory</returns>
        </member>
        <member name="M:SeleniumBase.Pages.Abstract.WebPage.DoNavigate">
            <summary>
                Navigates to pageObject's URL
            </summary>
        </member>
        <member name="M:SeleniumBase.Pages.Abstract.WebPage.FindAndClickWebElement(OpenQA.Selenium.By)">
            <summary>
                Finds an element and clicks at it
            </summary>
            <param name="by">XPath, CSS, Linktext e.g.</param>
        </member>
        <member name="M:SeleniumBase.Pages.Abstract.WebPage.WaitForPage(System.Int32)">
            <summary>
                Verifies Page title until the correct page title is found or timeout is hit
            </summary>
            <param name="timeout">Time in seconds</param>
        </member>
        <member name="M:SeleniumBase.Pages.Abstract.WebPage.DetectElement(OpenQA.Selenium.By,System.Int32)">
            <summary>
                Looks for an element loacted by locator
            </summary>
            <param name="locator">ID, XPath, CSSPath, etc.</param>
            <param name="timeout">Seconds to wait before element must show</param>
            <returns>True for element found or False for element not found</returns>
        </member>
        <member name="M:SeleniumBase.Pages.Abstract.WebPage.DetectElement(OpenQA.Selenium.By)">
            <summary>
                Looks for an element loacted by locator
                Default wait timeout is 5 sec.
            </summary>
            <param name="locator">ID, XPath, CSSPath, etc.</param>
            <returns>True for element found or False for element not found </returns>
        </member>
        <member name="M:SeleniumBase.Pages.EditProfilePage.EditProfile(System.String,System.String,System.String,System.String)">
            <summary>
                Edits profile with values specified as parameters.
                If a parameter is null it wont be changed.
            </summary>
            <param name="pwd">Password</param>
            <param name="confPwd">Confirm Password</param>
            <param name="country">Country</param>
            <param name="mail">Email</param>
        </member>
        <member name="T:SeleniumBase.Preconditions">
            <summary>
            Holds a collection of general methods to use before execution of tests
            </summary>
        </member>
        <member name="M:SeleniumBase.Preconditions.#ctor(OpenQA.Selenium.IWebDriver,SeleniumBase.DomainObjects.IUrlHandler,System.Text.StringBuilder)">
            <summary>
            Constructs a Preconditions object
            </summary>
            <param name="driver">The Selenium Webdriver instance used for testing</param>
            <param name="urlHandler">An instance of an IUrlHandler implementation</param>
            <param name="rallyNotes">Rally notes for current test</param>
            <param name="legoIdExplorer">Instance of LEGO Id Explorer</param>
            <param name="setting">The test settings</param>
        </member>
        <member name="M:SeleniumBase.Preconditions.PageAvailable(System.String)">
            <summary>
            Asserts if page is available, and if not it writes an entry in rally notes and throws an Nunit Inconclusive Exception
            </summary>
            <param name="url">url of the page to test</param>
            <exception cref="T:NUnit.Framework.InconclusiveException">Thrown if page is not available</exception>
        </member>
        <member name="P:SeleniumBase.Preconditions.UrlHandler">
            <summary>
            Handler for URLs during test
            </summary>
        </member>
        <member name="T:SeleniumBase.BaseTestsuite">
            <summary>
                Selenium Base class handles Setup and TearDown for tests
            </summary>
        </member>
        <member name="F:SeleniumBase.BaseTestsuite.WebDriverProxy">
            <summary>
            Selenium proxy server
            </summary>
        </member>
        <member name="F:SeleniumBase.BaseTestsuite.Driver">
            <summary>
            Instance to browserType driver
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.#ctor">
            <summary>
            Constructor for BaseTestsuite. Initializes Logger object.
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.#ctor(NLog.Logger,SeleniumBase.Services.IHttpUtility,RallyCommunicator.IRally,SeleniumBase.Services.IFileService,SeleniumBase.Services.ITestSettingService)">
            <summary>
            Constructor used for dependency injection
            </summary>
            <param name="logger">Instance of Logger</param>
            <param name="httpHelper">Instance of HttpUtility</param>
            <param name="rallyApi">Instance of Rally</param>
            <param name="fileService">Instance of FileService</param>
            <param name="testSettingService">Instance of TestSettingService</param>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.Initialize">
            <summary>
            Sets up logging, WebDriver and other helper objects according to the settings object that is found in TestSettingService. 
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.Initialize(SeleniumBase.Configuration.TestSetting)">
            <summary>
                Sets up logging, WebDriver and other helper objects according to the settings object
            </summary>
            <param name="setting">Settings that the WebDriver, logging and helpers should be configured to</param>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.SetupBrowser(SeleniumBase.Configuration.TestSetting)">
            <summary>
                Setup WebDriver according to settings
            </summary>
            <param name="setting">Settings to configure WebDriver to</param>
            <exception cref="T:System.NotImplementedException">Throws NotImplementedException if unknown WebDriver is specified in settings</exception>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.SetupLogging(SeleniumBase.Configuration.TestSetting,System.String)">
            <summary>
                Setup logging to file console and memory
            </summary>
            <param name="setting">TestSettings with ConsoleLogLevel set. If ConsoleLogLevel is not set, it will get default value of Info. </param>
            <param name="testName">Name of the test that logging should be set for. This will serve as filename for test log.</param>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.PrintTestName">
            <summary>
            Prints test name to logger before each test starts
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.CleanUp">
            <summary>
                Cleans up after each test
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.TotalCleanUp">
            <summary>
                Cleans up after all tests
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.StaticTestFixtureTearDown">
            <summary>
                Test for making SeleniumBase compatible with gherking tests (Specflow)
                This method is meant to run after all tests have run
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.StaticTestCleanUp">
            <summary>
                Test for making SeleniumBase compatible with gherkin tests (Specflow)
                This method is meant to run after each test
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.TakeScreenshot(System.String)">
            <summary>
                Takes a screenshot at the current page the webdriver is at and saves it to an image file. Save location is relative to
                loggingDirecotry in app.config.
            </summary>
            <param name="filename">Filename of the screenshot. E.g. myscreenshot.png</param>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.GetTestexecutionLog">
            <summary>
                Returns the log that is written until the time this method is called
            </summary>
            <returns>Recorded log</returns>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.TerminateWebDriver">
            <summary>
                Terminates WebDriver if it is active
            </summary>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.AssertHelper(System.Action)">
            <summary>
            Helper method to run assert
            </summary>
            <param name="action">The assert statement that should be executed.</param>
        </member>
        <member name="M:SeleniumBase.BaseTestsuite.AddExistingFileToTestResult(System.String)">
            <summary>
            Queue a file to submit together with test result to Rally
            </summary>
            <param name="filePath">Path to the file</param>
            <returns>True if file exists. False if file could not be found</returns>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.LegoidActivator">
            <summary>
            LEGO ID Activator instance, used for activating accounts
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.LegoIdExplorer">
            <summary>
            LEGO ID Explorer instance, used for registering and logging in with LEGO ID accounts
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.AttachmentFiles">
            <summary>
            List of screenshots that will be submitted to rally after test. Key is filename.
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.RallyApi">
            <summary>
            API to communicate with Rally
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.Setting">
            <summary>
            The current settings that are used
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.LEGOCookieManager">
            <summary>
            LEGO Cookie manager instance, used for managing LEGO domain specific cookies
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.UrlHandler">
            <summary>
            Url handler instance, used for transforming URL according to testsettings passed to Initialize() method
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.HttpHelper">
            <summary>
            Http utility instance, used for checking URL HTTP status codes
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.Logger">
            <summary>
            NLog instance for logging
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.RallyNotes">
            <summary>
                Stores information to be submittet with the test case result in the note field
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.Preconditions">
            <summary>
            Collection of usefull pre-tests methods
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.EmailExplorer">
            <summary>
                Send and retrieve emails from email address dk3QADep@LEGO.com"
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.FileService">
            <summary>
            Service to handle file system operations
            </summary>
        </member>
        <member name="P:SeleniumBase.BaseTestsuite.TestSettingService">
            <summary>
            Service to handle testsettings. Reads from the file "testsetting.xml" if present and populates testsettings with default values for those remaining.
            </summary>
        </member>
        <member name="T:SeleniumBase.Services.IFileService">
            <summary>
            Provides functionality to the filesystem
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.IFileService.GetFileStream(System.String,System.IO.FileMode)">
            <summary>
            Opens a file and returns the stream
            </summary>
            <param name="filePath">Path to file</param>
            <param name="fileMode">Filemode to use for opening file</param>
            <returns>Filestream from file</returns>
        </member>
        <member name="M:SeleniumBase.Services.IFileService.OpenRead(System.String)">
            <summary>
            Opens an existing file with read access
            </summary>
            <param name="filePath">Path to file</param>
            <returns>Stream from file</returns>
        </member>
        <member name="M:SeleniumBase.Services.IFileService.ReadFileBytes(System.String)">
            <summary>
            Opens a file and reads content into a byte array
            </summary>
            <param name="filePath">Path to file</param>
            <returns>Array of bytes read from file</returns>
        </member>
        <member name="M:SeleniumBase.Services.IFileService.Exists(System.String)">
            <summary>
            Checks if file exist
            </summary>
            <param name="filePath">Path to file</param>
            <returns>True if file exist. Otherwise false.</returns>
        </member>
        <member name="M:SeleniumBase.Services.IFileService.Open(System.String,System.IO.FileMode)">
            <summary>
            Opens a stream to the file
            </summary>
            <param name="filePath">Path to the file</param>
            <param name="fileMode">Mode the file should be opened with</param>
            <returns>Stream to the file</returns>
        </member>
        <member name="T:SeleniumBase.Services.FileService">
            <summary>
            Provides functionality to the filesystem
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.FileService.GetFileStream(System.String,System.IO.FileMode)">
            <summary>
            Opens a file and returns the stream
            </summary>
            <param name="filePath">Path to file</param>
            <param name="fileMode">Mode to use for opening file</param>
            <returns>Filestream from file</returns>
        </member>
        <member name="M:SeleniumBase.Services.FileService.OpenRead(System.String)">
            <summary>
            Opens an existing file with read access
            </summary>
            <param name="filePath">Path to file</param>
            <returns>Stream from file</returns>
        </member>
        <member name="M:SeleniumBase.Services.FileService.ReadFileBytes(System.String)">
            <summary>
            Opens a file and reads content into a byte array
            </summary>
            <param name="filePath">Path to file</param>
            <returns>Array of bytes read from file</returns>
        </member>
        <member name="M:SeleniumBase.Services.FileService.Exists(System.String)">
            <summary>
            Checks if file exist
            </summary>
            <param name="filePath">Path to file</param>
            <returns>True if file exist. Otherwise false.</returns>
        </member>
        <member name="M:SeleniumBase.Services.FileService.Open(System.String,System.IO.FileMode)">
            <summary>
            Opens a stream to the file
            </summary>
            <param name="filePath">Path to the file</param>
            <param name="fileMode">Mode the file should be opened with</param>
            <returns>Stream to the file</returns>
        </member>
        <member name="T:SeleniumBase.Services.IHttpUtility">
            <summary>
            Utility class that can handle HTTP specific tasks
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.IHttpUtility.CheckUrl(System.String)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc.</returns>
        </member>
        <member name="M:SeleniumBase.Services.IHttpUtility.CheckUrl(System.Uri)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc.</returns>
        </member>
        <member name="M:SeleniumBase.Services.IHttpUtility.CheckUrl(System.Uri,System.Boolean)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <param name="followRedirects">Instructs the webrequest to follow redirects and return the final response code if set to true</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc. Returns -9999 if the status code could not be determined.</returns>
        </member>
        <member name="M:SeleniumBase.Services.IHttpUtility.CheckUrl(System.String,System.Boolean)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <param name="followRedirects">Instructs the webrequest to follow redirects and return the final response code if set to true</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc. Returns -9999 if the status code could not be determined.</returns>
        </member>
        <member name="M:SeleniumBase.Services.IHttpUtility.GetHtmlDocument(System.String)">
            <summary>
            Retrieves a html document from an URL
            </summary>
            <param name="url">The url to the document to retrieve</param>
            <returns>Document that was found at the url.</returns>
        </member>
        <member name="T:SeleniumBase.Services.HttpUtility">
            <summary>
            Utility class that can handle HTTP specific tasks
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.HttpUtility.CheckUrl(System.String)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc. Returns -9999 if the status code could not be determined.</returns>
        </member>
        <member name="M:SeleniumBase.Services.HttpUtility.CheckUrl(System.Uri)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc.</returns>
        </member>
        <member name="M:SeleniumBase.Services.HttpUtility.GetHtmlDocument(System.String)">
            <summary>
            Retrieves a html document from an URL
            </summary>
            <param name="url">The url to the document to retrieve</param>
            <returns>Document that was found at the url.</returns>
        </member>
        <member name="M:SeleniumBase.Services.HttpUtility.CheckUrl(System.Uri,System.Boolean)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <param name="followRedirects">Instructs the webrequest to follow redirects and return the final response code if set to true</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc. Returns -9999 if the status code could not be determined.</returns>
        </member>
        <member name="M:SeleniumBase.Services.HttpUtility.CheckUrl(System.String,System.Boolean)">
            <summary>
            Checks the HTTP status code for a url
            </summary>
            <param name="url">The url to check</param>
            <param name="followRedirects">Instructs the webrequest to follow redirects and return the final response code if set to true</param>
            <returns>Status code for the url. 200 for OK. 404 for not found. etc. Returns -9999 if the status code could not be determined.</returns>
        </member>
        <member name="T:SeleniumBase.Configuration.TestSetting">
            <summary>
                Settings class to configure test
            </summary>
        </member>
        <member name="M:SeleniumBase.Configuration.TestSetting.#ctor">
            <summary>
                Constructs the settings class based on the values found. TestSettings section in app.config
                Required values that are not found in app.config are set to defaultdefault values: 
            Locale = "en-US";
            Browser = BrowserType.Chrome;
            Environment = LEGOEnvironment.Dev;
            SubmitTestCaseResultToRally = false;
            ConsoleLogLevel = LogLevel.Info;
            UseNewBrowserInstance = false;
            BrowserStartUpOptions = new BrowserStartUpOptions();
            UseDevInsteadOfLocalServices = true;
            RallyTestCaseId = "";
            BaseUrl = "http://www.lego.com";
            RemoteWebDriverUrl = "http://dkaapp-st1.corp.lego.com:4444/wd/hub";
            LoggingDirectory = ".\\logs";
            Sequential = false;
            SuppressFileLogging = false;
            SuppressUseOfImagesFromLogDirForAllureReport = false;
            SuppressWebDriver = false;
            BrowserSize = new Size(1280, 1024);
            </summary>
        </member>
        <member name="M:SeleniumBase.Configuration.TestSetting.Equals(SeleniumBase.Configuration.TestSetting)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:SeleniumBase.Configuration.TestSetting.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:SeleniumBase.Configuration.TestSetting.Load(System.String,SeleniumBase.Services.IFileService)">
            <summary>
            Load settings from a XML file
            </summary>
            <param name="filePath">Path to the xml file that should be deserialized</param>
            <param name="fileService">Service to manage tasks with file system</param>
            <returns>TestSetting with values found in file</returns>
        </member>
        <member name="M:SeleniumBase.Configuration.TestSetting.Save(System.String)">
            <summary>
            Save the current instance to specified XML file
            </summary>
            <param name="filePath">Path to the XML file. If it does not exist it will be created. If it exist it will be overwirtten.</param>
            <returns>Operation success</returns>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.BrowserSize">
            <summary>
            Specifies what size the WebDriver should use
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.Locale">
            <summary>
                Locale that the test should use
                E.g. en-us
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.Browser">
            <summary>
                browserType that should be used
                If useRemoteWebDriver flag is set to true, but RemoteBrowserConfiguration is not set, the this browserType will be
                used to determind which remote browserType to start
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.Environment">
            <summary>
                LEGO DefectEnvironment
                E.g. DEV
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.SubmitTestCaseResultToRally">
            <summary>
                Flag that indicates if test case result should be submitted to Rally
                Warning: RallyTestCaseId should be set
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.UseRemoteBrowser">
            <summary>
                Flag that indicates if remote WebDriver should be used
                True = will use remote webdriver | False = will start local webdriver
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.RallyTestCaseId">
            <summary>
                Test Case ID in Rally that should be reported to (E.g. TC1088)
                Warning: SubmitTestCaseResultToRally must be set to true
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.BaseUrl">
            <summary>
                URL that should be used as base
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.UseDevInsteadOfLocalServices">
            <summary>
            Specifies if the UrlHandler should convert third party services, such as LEGO ID etc., to DEV instead of Locale
            Defaults to true
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.RemoteBrowserConfiguraion">
            <summary>
                Remote browserconfiguraiton that should be set if the test is supposed to run on BrowserStack
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.ClearDateOfBirthCookie">
            <summary>
                Flag that indicates if the date of birth cookie should be cleared after the test
                Usefull when you uses LEGO ID accounts in your test
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.ConsoleLogLevel">
            <summary>
                Specifies the lowest level of infomation that should be printed to console
                E.g. Trace
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.UseNewBrowserInstance">
            <summary>
                Set this to start a new browserType instance even if a instance of this browserType type is already open. Default: false.
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.BrowserStartUpOptions">
            <summary>
                Set special conditions that browserType should start up with. Note that not all browsers necessarily support all
                options
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.RemoteWebDriverUrl">
            <summary>
            URL to remote webdriver hub
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.LoggingDirectory">
            <summary>
            Path to folder where logs and screenshots should be saved
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.Sequential">
            <summary>
            Defines if tests should run sequential or if they can be runned in parallel
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.SuppressWebDriver">
            <summary>
            Defines if the Web driver should be started or not
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.SuppressFileLogging">
            <summary>
            Defines if the logger should write to a log file in the log directory
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.SuppressUseOfImagesFromLogDirForAllureReport">
            <summary>
            Defines if the images in saved to log directory should be used in the Allure report
            </summary>
        </member>
        <member name="P:SeleniumBase.Configuration.TestSetting.TakeScreenshotBeforeAssert">
            <summary>
            Instructs asserthelper to take screenshot before assert
            </summary>
        </member>
        <member name="T:SeleniumBase.Services.ITestSettingService">
            <summary>
            Interface for test setting service
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.ITestSettingService.GetTestSetting">
            <summary>
            Loads settings from file if present and defaults values that are not set
            </summary>
            <returns>Settings</returns>
        </member>
        <member name="M:SeleniumBase.Services.ITestSettingService.GetTestSetting(System.String)">
            <summary>
            Loads settings from file specified and defaults values that are not set
            </summary>
            <param name="pathToSettingsFile">Path to testsetting file. File must be XML.</param>
            <returns>Settings</returns>
        </member>
        <member name="T:SeleniumBase.Services.TestSettingService">
            <summary>
            Service to handle TestSetting
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.TestSettingService.#ctor(SeleniumBase.Services.IFileService)">
            <summary>
            Constructs the test setting service
            </summary>
            <param name="fileService">Service to handle file system operations</param>
        </member>
        <member name="M:SeleniumBase.Services.TestSettingService.GetTestSetting">
            <summary>
            Loads settings from file if present and defaults values that are not set
            </summary>
            <returns>Settings</returns>
        </member>
        <member name="M:SeleniumBase.Services.TestSettingService.GetTestSetting(System.String)">
            <summary>
            Loads settings from file specified and defaults values that are not set
            </summary>
            <param name="pathToSettingsFile">Path to testsetting file. File must be XML.</param>
            <returns>Settings</returns>
        </member>
        <member name="T:SeleniumBase.TrackingTestsuite">
            <summary>
            Use to validate tracking functionality
            </summary>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.#ctor(SeleniumBase.Tracking.IFactory)">
            <summary>
            Unittest DI constructor
            </summary>
            <param name="factory"></param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.Init">
            <summary>
            Initializes the components used for testing tracking such as the WebProxy
            </summary>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.Dispose">
            <summary>
            Performs the necessary cleanup tasks not handled by .Net garbage collector
            </summary>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertPageViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.PagehitCriteria)">
            <summary>
            Assert that a valid SiteCatalyst request when entering a LEGO website
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => { webDriver.Navigate().GotoUrl("http://www.lego.com");}</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertProductViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.ProductViewCriteria)">
            <summary>
            Assert that a valid SiteCatalyst request is captured when displaying a LEGO product page with a selected product
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => { webDriver.Navigate().GotoUrl("http://www.lego.com");}</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertProductCheckPriceLinkOnNonUsLocaleIsTracked(System.Action,SeleniumBase.Tracking.Criteria.CheckPriceIntentCriteria,SeleniumBase.Tracking.Criteria.CheckPriceSuccessCriteria)">
            <summary>
            Assert that two valid SiteCatalyst request when clicking a checkprice button on non US pages
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => { webDriver.Navigate().GotoUrl("http://www.lego.com");}</param>
            <param name="intent">Criteria to match, add criteria by the fluent interface</param>
            <param name="success">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertProductCheckPriceLinkOnUsLocaleIsTracked(System.Action,SeleniumBase.Tracking.Criteria.CheckPriceIntentCriteria)">
            <summary>
            Assert that a valid SiteCatalyst request when clicking a checkprice button on US pages
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => _driver.FindElement(By.Id("checkPrice")).Click();</param>
            <param name="intent">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertProductCheckPricePopupContinueIsTracked(System.Action,SeleniumBase.Tracking.Criteria.CheckPriceContinueCriteria,SeleniumBase.Tracking.Criteria.CheckPriceSuccessCriteria)">
            <summary>
            Assert that two valid SiteCatalyst request when clicking the continue link on the popup which appear
            when clicking the checkprice button on a US page
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => _driver.FindElement(By.Id("continue")).Click();</param>
            <param name="checkPriceContinue">Criteria to match, add criteria by the fluent interface</param>
            <param name="checkPriceSuccess">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertProductCheckPricePopupCancelIsTracked(System.Action,SeleniumBase.Tracking.Criteria.CheckPriceCancelCriteria)">
            <summary>
            Assert that a valid SiteCatalyst request when clicking the cancel link on the popup which appear
            when clicking the checkprice button on a US page
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => _driver.FindElement(By.Id("cancel")).Click();</param>
            <param name="checkPriceCancel">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertTellAFriendIsTracked(System.Action,SeleniumBase.Tracking.Criteria.TellAFriendCriteria)">
            <summary>
            Assert that a valid SiteCatalyst request when clicking a tell a friend link
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => _driver.FindElement(By.Id("tell-a-friend")).Click();</param>
            <param name="tellAFriendCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertFunzoneViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.FunzoneCriteria)">
            <summary>
            Assert that a valid SiteCatalyst request when viewing a funzone bage like
            http://http://spongebob.lego.com/en-us/funzone/
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => { webDriver.Navigate().GotoUrl("http://http://spongebob.lego.com/en-us/funzone/");}</param>
            <param name="funzoneCriteria">Criteria to match, add criteria by the fluent interface</param>>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertMediaPlayIsTracked(System.Action,SeleniumBase.Tracking.Criteria.MediaCriteria)">
            <summary>
            Assert correct number of valid SiteCatalyst requests when viewing a part of a video 
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request, can be Thread.Sleep
            example: () => { Driver.FindElement(By.Id("play-btn")).Click();} or 
            () => { Thread.Sleep(Convert.ToInt32(0.22 * videoLength));}</param>
            <param name="criteria">The criteria to match</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertDownloadLinkedClickedIsTracked(System.Action,SeleniumBase.Tracking.Criteria.DownloadCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when clicking on a download link
            </summary>
            <param name="action">The method that should click the exitlink
            example: () => { webDriver.FindElement(By.LinkText("Book Labels")).Click();}</param>
            <param name="downloadCriteria">Criteria to match, add criteria by the fluent interface</param>
            <returns>Information about the result of the test</returns>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertExitLinkClickedIsTracked(System.Action,SeleniumBase.Tracking.Criteria.ExitLinkCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when clicking "Continue" in the exitlink popup
            
            NOTE: This method should be used only for sites using the standard exitlink popup. Sites using a custom exit link popup
            should use method OnLeavingLEGODomain
            </summary>
            <param name="action">The method that should click the exitlink (Not "Continue" in popup)
            example: () => { webDriver.FindElement(By.LinkText("AppStore")).Click();}</param>
            <param name="exitLinkCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertLeavingLegoDomainIsTracked(System.Action,SeleniumBase.Tracking.Criteria.ExitLinkCriteria)">
            <summary>
            Assert that a valid Sitecatalyst exitlink request is captured when leaving LEGO.com
            
            NOTE: This method should be used only for sites not using the standard exitlink popup. Sites using the standard exit link popup
            should use method ExitLinkClicked
            </summary>
            <param name="action">The method that should click the exitlink (Not "Continue" in popup)
            example: () => { webDriver.FindElement(By.LinkText("AppStore")).Click();}</param>
            <param name="exitLinkCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertGamePlayIsTracked(System.Action,SeleniumBase.Tracking.Criteria.GamePlayCriteria)">
            <summary>
            Assert that a valid Sitecatalyst gameplay request is captured when starting to play a game on LEGO.com
            
            NOTE: Games are assumed to be played after 15 seconds.
            </summary>
            <param name="action">The method that should start the game, this is normally on entering the game page.
            example: () => { webDriver.Navigate().GoToUrl("http://www.lego.com/da-dk/chima/games/speedorz-game/");}</param>
            <param name="gameCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertGameReplayIsTracked(System.Action,SeleniumBase.Tracking.Criteria.GameReplayCriteria)">
            <summary>
            Assert that a valid Sitecatalyst gameplay request is captured when starting to play a game on LEGO.com
            
            NOTE: Games are assumed to be played after 15 seconds.
            </summary>
            <param name="action">The method that should start the game, this is normally on entering the game page.
            example: () => { webDriver.Navigate().GoToUrl("http://www.lego.com/da-dk/chima/games/speedorz-game/");}</param>
            <param name="gameReplayCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertProductAddToWishlistIsTracked(System.Action,SeleniumBase.Tracking.Criteria.AddToWishlistCriteria)">
            <summary>
            Assert that a valid Sitecatalyst AddToWishlist request is captured when clicking AddToWishlist link on a product on LEGO.com
            </summary>
            <param name="action">The method that should click the AddToWishlist link
            example: () => { webDriver.FindElement(By.ClassName("btn-addto-wishlist")).Click();}</param>
            <param name="addToWishlistCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertGalleryOverviewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.GalleryOverviewCriteria)">
            <summary>
            Assert that a valid Sitecatalyst Gallery Overview request is captured when loading a Gallery page on LEGO.com
            </summary>
            <param name="action">The method that should load the gallery overview page
            example: () => { webDriver.Navigate().GoToUrl("http://www.us.lego.com/en-us/starwars/gallery/");}</param>
            <param name="galleryOverviewCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertGalleryCreationViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.GalleryCreationViewCriteria)">
            <summary>
            Assert that a valid gallery creation view is tracked when viewing a gallary creation
            </summary>
            <param name="action">The method that should trigger showing the creation
            example: webDriver.FindElements(By.ClassName("creation"))[0].Click(););}</param>
            <param name="galleryCreationViewCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertGalleryUploadIsTracked(System.Action,SeleniumBase.Tracking.Criteria.GalleryCreationUploadCriteria)">
            <summary>
            Assert that a valid gallery creation upload event is tracked when uploading a gallary creation
            </summary>
            <param name="action">The method that should trigger uploading the creation
            example: webDriver.FindElement(By.Id("upload-btn")).Click(););}</param>
            <param name="galleryCreationUploadCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertGalleryCreationRatingIsTracked(System.Action,SeleniumBase.Tracking.Criteria.GalleryCreationRatingCriteria)">
            <summary>
            Assert that a valid gallery creation rating event is tracked when rating a gallary creation
            </summary>
            <param name="action">The method that should trigger rating the creation
            example: () => _webDriver.FindElement(By.Id("rate-btn")).Click();</param>
            <param name="galleryCreationRatingCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertCharacterViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.CharacterViewCriteria)">
            <summary>
            Assert that a valid character view is tracked when opening a character page
            </summary>
            <param name="action">The method that should load the character page
            example: () => webDriver.Navigate().GoToUrl("http://friends.lego.com/en-us/characters/stephanie");</param>
            <param name="characterViewCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertCharacterProductViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.CharacterProductViewCriteria)">
            <summary>
            Assert that a valid character view is tracked when opening a character page that presents a product
            </summary>
            <param name="action">The method that should load the character page
            example: () => webDriver.Navigate().GoToUrl("http://friends.lego.com/en-us/characters/stephanie");</param>
            <param name="characterProductViewCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertSocialMediaSharingIsTracked(System.Action,SeleniumBase.Tracking.Criteria.SocialMediaCriteria)">
            <summary>
            Assert that a valid social media sharing event is tracked when clicking to share LEGO content on a social media channel
            </summary>
            <param name="action">The method that should load the character page
            example: () => _webDriver.FindElement(By.Id("facebook-btn")).Click();</param>
            <param name="socialMediaCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertClubSignupSubmitIsTracked(System.Action,SeleniumBase.Tracking.Criteria.ClubSignUpCriteria)">
            <summary>
            Assert that a valid Sitecatalyst Club Sign-up request is captured when clicking continue to complete Club Signup
            </summary>
            <param name="action">The method that should click the exitlink (Not "Continue" in popup)
            example: () => { webDriver.FindElement(By.LinkText("AppStore")).Click();}</param>
            <param name="clubSignUpCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertNpsSurveySubmitIsTracked(System.Action,SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria)">
            <summary>
            Assert that a valid Sitecatalyst Club Sign-up request is captured when last question in Nps survey is answered
            </summary>
            <param name="action">The method that should click the last answer in the survey form
            example: () => { webDriver.FindElement(By.LinkText("AppStore")).Click();}</param>
            <param name="npsSurveySubmitCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertCampaignCodeViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.CampaignCodeCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when loading a url containing a campaign code
            </summary>
            <param name="action">The method that should load the url containing the campaign code.ex.() => Driver.Navigate().GoToUrl("http://www.lego.com?cmp=weiru32;")</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertInternalCampaignCodeViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.InternalCampaignCodeCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when loading a url containing a internal campaign code
            </summary>
            <param name="action">The method that should load the url containing the internal campaign code.ex.() => Driver.Navigate().GoToUrl("http://www.lego.com?icmp=weiru32;")</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertProductCodeSubmitIsTracked(System.Action,SeleniumBase.Tracking.Criteria.ProductCodeCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when submitting a product code on a page
            </summary>
            <param name="action">The method that should submit the code ex. () => Driver.FindElement(By.Id("submitbtn")).Click()</param>
            <param name="productCodeCriteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertMessageboardTopicPostIsTracked(System.Action,SeleniumBase.Tracking.Criteria.MessageBoardAddPostCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when submitting a product code on a page
            </summary>
            <param name="action">The method that should submit the code ex. () => Driver.FindElement(By.Id("submitbtn")).Click()</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertMessageboardPollVoteIsTracked(System.Action,SeleniumBase.Tracking.Criteria.MessageBoardPollVoteCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when voting on a messageboard poll
            </summary>
            <param name="action">The method that should click to vote. ex. () => Driver.FindElement(By.Id("checkbox-answer1")).Click()</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertMessageboardPostLikeVoteIsTracked(System.Action,SeleniumBase.Tracking.Criteria.MessageBoardLikePostPostCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when liking a messageboard post
            </summary>
            <param name="action">The method that should click to vote. ex. () => Driver.FindElement(By.Id("like-btn")).Click()</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertMessageboardPostReplyIsTracked(System.Action,SeleniumBase.Tracking.Criteria.MessageBoardReplyPostCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when replying a messageboard post
            </summary>
            <param name="action">The method that should submit the reply. ex. () => Driver.FindElement(By.Id("reply-submit-btn")).Click()</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertComicViewIsTracked(System.Action,SeleniumBase.Tracking.Criteria.ComicViewCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when viewing a comic
            </summary>
            <param name="action">The method that should submit the reply. ex. () => Driver.FindElement(By.Id("nextpage-btn")).Click()</param>
            <param name="criteria">Criteria to match, add criteria by the fluent interface</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertAccountSignUpSubmitIsTracked(System.Action,SeleniumBase.Tracking.Criteria.LegoIdSignUpCriteria)">
            <summary>
            Assert that a valid Sitecatalyst request is captured when clicking "Get your LEGO ID" after filling out the requered fields
            </summary>
            <param name="action">The method that should submit the reply. ex. () => Driver.FindElement(By.Id("buttonSubmitAdultInfo")).Click()</param>
            <param name="criteria"></param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertActionIsTracked(System.Action,System.Int32,SeleniumBase.Tracking.Criteria.IPageStatsCriteria[])">
            <summary>
            Asserts that SiteCatalyst requests that match the criteria is tracked 
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => _driver.FindElement(By.Id("checkPrice")).Click();</param>
            <param name="millisecondsPageStatsWait">The time in milliseconds to wait for all SiteCatalyst requests</param>
            <param name="criteria">The criteria to match</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.AssertActionIsTrackedExclusively(System.Action,System.Int32,SeleniumBase.Tracking.Criteria.IPageStatsCriteria[])">
            <summary>
            Asserts that only SiteCatalyst requests that match the criteria is tracked 
            </summary>
            <param name="action">The method that should trigger the SiteCatalyst request
            example: () => _driver.FindElement(By.Id("checkPrice")).Click();</param>
            <param name="millisecondsPageStatsWait">The time in milliseconds to wait for all SiteCatalyst requests</param>
            <param name="criteria">The criteria to match</param>
        </member>
        <member name="M:SeleniumBase.TrackingTestsuite.LogError(System.String)">
            <summary>
            Appends an error message to Rallynotes with an error number and returns the message
            </summary>
            <param name="message">The error message to append to Rallynotes</param>
            <returns>The message parameter</returns>
        </member>
        <member name="P:SeleniumBase.TrackingTestsuite.MillisecondsPageStatsWait">
            <summary>
            Get or set the default milliseconds to wait for a SiteCatalyst Request.
            Try to ajust this value if pages has bad performance and tests fail.
            </summary>
        </member>
        <member name="P:SeleniumBase.TrackingTestsuite.DisregardValidationErrors">
            <summary>
            Set to true to indicate that the buildin PageStats rules should be disregarded
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.CustomLinkCriteria`1">
            <summary>
            Base class for specialized custom link criteria
            </summary>
            <typeparam name="T">The type of the specialized custom link criteria</typeparam>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Criteria`1">
            <summary>
            Collection to store and match criterion for SiteCatalyst requests
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.ICriteria">
            <summary>
            Set of criterion to match against SiteCatalyst requests
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.ICriteria.Match(LEGO.Web.Analytics.FiddlerExtension.Parser.ISessionInfo)">
            <summary>
            Matches SiteCatalyst requests agains criteria
            </summary>
            <param name="trackingSession">SiteCatalyst request to match</param>
            <returns>True if all criterion is met</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.ICriteria.MatchReport">
            <summary>
            Detailed report about each SiteCatalyst request property match result
            </summary>
            <returns>Report</returns>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.ICriteria.RequiredDeley">
            <summary>
            Minimum milliseconds to wait from action triggering the SiteCatalyst request
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.ICriteria.AcceptedDelay">
            <summary>
            Maximum milliseconds to wait from action triggering the SiteCatalyst request
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.Criteria`1.MatchedSessions">
            <summary>
            Contains all SiteCatalyst requests matched
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.#ctor">
            <summary>
            Creates a collection to store and match criterion for SiteCatalyst requests
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.Add(SeleniumBase.Tracking.Criteria.ICriteria[])">
            <summary>
            Link other criteria to this criteria. To be matched recursively.
            </summary>
            <param name="criteria">The criteria to link</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.MatchReport">
            <summary>
            Detailed report about each SiteCatalyst request property match result
            </summary>
            <returns>Report</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.Match(LEGO.Web.Analytics.FiddlerExtension.Parser.ISessionInfo)">
            <summary>
            Matches given SiteCatalyst request aganinst all criteria
            </summary>
            <param name="trackingSession">The SiteCatalyst request to match</param>
            <returns>True if all criterion match, otherwise false</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.Add(SeleniumBase.Tracking.Criteria.Criterion[])">
            <summary>
            Adds a criterion to the collection
            </summary>
            <param name="criteria">Another criteria</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.Remove(SeleniumBase.Tracking.Criteria.Criterion[])">
            <summary>
            Removes property criterion object
            </summary>
            <param name="criteria">The previously add property criterion to remove</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.Remove(System.String)">
            <summary>
            Removes all criteria for given property
            </summary>
            <param name="propertyKey">The property key, example: v59</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Criteria`1.Remove(LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties)">
            <summary>
            Removes all criteria for given property
            </summary>
            <param name="propertyKey">The property key</param>
            <returns>this</returns>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.Criteria`1.PropertyCriteria">
            <summary>
            Contains all criterion fo this collection
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.Criteria`1.RequiredDeley">
            <summary>
            Minimum milliseconds to wait from action triggering the SiteCatalyst request
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.Criteria`1.AcceptedDelay">
            <summary>
            Maximum milliseconds to wait from action triggering the SiteCatalyst request
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.Criteria`1.Item(System.String)">
            <summary>
            Returns all criteria for a given property
            </summary>
            <param name="propertyKey">The name of the property</param>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.Criteria`1.Item(LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties)">
            <summary>
            Returns all criteria for a given property
            </summary>
            <param name="propertyKey">The name of the property</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.LinkhitCriteria`1.Pages(System.String)">
            <summary>
            Verify correct value in Pages variable. Should be the same value as PageName on Pagehit
            </summary>
            <param name="pages">Format ex. portal:videos:categories:overview</param>
            <returns>This instance, allowing method chaining (fluint API)</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.LinkhitCriteria`1.ContentRegion(System.String)">
            <summary>
            Verify correct content region is set.
            </summary>
            <param name="region">Format ex. da-dk</param>
            <returns>This instance, allowing method chaining (fluint API)</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.LinkhitCriteria`1.Page(System.String)">
            <summary>
            Verify that the last part of the page name is set correct. 
            Note will be 'overview' on pages having sub-pages like http://www.lego.com/en-us/videos/categories  
            where page name is portal:videos:categories:overview, 
            and on 'first level' pages like http://www.lego.com/products where page name is portal:products:overview
            </summary>
            <param name="page">ex. overview, 40012</param>
            <returns>This instance, allowing method chaining (fluint API)</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.LinkhitCriteria`1.UserLocation(System.String,SeleniumBase.Enums.LEGOEnvironment)">
            <summary>
            Verify correct user location is tracked. Note if testing on dev any value will be replaced with 'XX' 
            as user location cannot be resolved
            </summary>
            <param name="location">Format ex. DK, US, FR etc.</param>
            <param name="environment">The environment of the tested website </param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.CustomLinkCriteria`1.#ctor">
            <summary>
            Constructs a object with necessary criteria to identify SiteCatalyst tracking request when clicking custom links.
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.PagehitCriteria`1.ContentRegion(System.String)">
            <summary>
            Verify correct content region is set.
            </summary>
            <param name="region">Format ex. da-dk</param>
            <returns>This instance, allowing method chaining (fluint API)</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.PagehitCriteria`1.Page(System.String)">
            <summary>
            Verify that the last part of the page name is set correct. 
            Note will be 'overview' on pages having sub-pages like http://www.lego.com/en-us/videos/categories  
            where page name is portal:videos:categories:overview, 
            and on 'first level' pages like http://www.lego.com/products where page name is portal:products:overview
            </summary>
            <param name="page">ex. overview, 40012</param>
            <returns>This instance, allowing method chaining (fluint API)</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.PagehitCriteria`1.UserLocation(System.String,SeleniumBase.Enums.LEGOEnvironment)">
            <summary>
            Verify correct user location is tracked. Note if testing on dev any value will be replaced with 'XX' 
            as user location cannot be resolved
            </summary>
            <param name="location">Format ex. DK, US, FR etc.</param>
            <param name="environment">The environment of the tested website </param>
            <returns></returns>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.CampaignCodeCriteria">
            <summary>
            Matches SiteCatalyst requests triggered when url contains a external campaign code
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.CampaignCodeCriteria.#ctor">
            <summary>
            Veries that the campaign code properties contain at least one character
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.CampaignCodeCriteria.PreviousCampaignCodes(System.String[])">
            <summary>
            Matches SiteCatalyst requests triggered when url contains a external campaign code
            </summary>
            <param name="previousCampaignCodes">Previous codes registered on the page. Note: Selenium webdriver doesn´t save cookie between sessions</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.CampaignCodeCriteria.CampainCode(System.String)">
            <summary>
            Sets the exact campaign code
            </summary>
            <param name="campaignCode">The actual code in the ur. ex. http://www.lego.com?cmp=qwerty1;</param>
            <returns></returns>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Shop.AddToCartCriteria">
            <summary>
            Contains criteria for verifying tracking on address form on shop pages
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Shop.ShopCriteria`1">
            <summary>
            Shared criteria for checkout
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Shop.AddToCartCriteria.#ctor">
            <summary>
            Constructs a criteria with basic criteria for checkout address form
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Shop.RemoveFromCartCriteria">
            <summary>
            Contains criteria for verifying tracking on address form on shop pages
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Shop.CreateNewCartCriteria">
            <summary>
            Contains criteria for verifying tracking on address form on shop pages
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Shop.ShopCriteria">
            <summary>
            Contains general criteria for checkout, see if a more specialized version is available
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Shop.CheckoutAddressCriteria">
            <summary>
            Contains criteria for verifying tracking on address form on shop pages
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Shop.CheckoutAddressCriteria.#ctor">
            <summary>
            Constructs a criteria with basic criteria for checkout address form
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Shop.CheckoutCompleteCriteria">
            <summary>
            Contains criteria for verifying tracking on address form on shop pages
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.Shop.CheckoutCompleteCriteria.#ctor">
            <summary>
            Constructs a criteria with basic criteria for checkout address form
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.ValidProductCodeCriteria">
            <summary>
            Object containing necessary criteria to identify SiteCatalyst tracking request when entering a valid product codes on LEGO websites. Enherits CustomLinkCriteria
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.ValidProductCodeCriteria.#ctor">
            <summary>
            Constructs a object with necessary criteria to identify SiteCatalyst tracking request when entering a valid product codes on LEGO websites.
            Use fluent interface to add additonal criteria to this object thus making the test more reliable.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.InternalCampaignCodeCriteria">
            <summary>
            Matches SiteCatalyst requests triggered when url contains a external campaign code
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.InternalCampaignCodeCriteria.#ctor(System.String)">
            <summary>
            Matches SiteCatalyst requests triggered when url contains a internal campaign code
            </summary>
            <param name="campaignCode">The actual code in the ur. ex. http://www.lego.com?icmp=qwerty1;</param>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.MessageBoardPollVoteCriteria">
            <summary>
            Object containing necessary criteria to identify SiteCatalyst tracking request when submitting a poll vote on a message board. Enherits CustomLinkCriteria
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MessageBoardPollVoteCriteria.#ctor">
            <summary>
            Constructs a object with necessary criteria to identify SiteCatalyst tracking request when submitting a poll vote on a message board.
            Use fluent interface to add additonal criteria to this object thus making the test more reliable.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.MessageBoardLikePostPostCriteria">
            <summary>
            Object containing necessary criteria to identify SiteCatalyst tracking request when liking a post on a message board. Enherits CustomLinkCriteria
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MessageBoardLikePostPostCriteria.#ctor">
            <summary>
            Constructs a object with necessary criteria to identify SiteCatalyst tracking request when linking a post on a message board.
            Use fluent interface to add additonal criteria to this object thus making the test more reliable.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.MessageBoardReplyPostCriteria">
            <summary>
            Object containing necessary criteria to identify SiteCatalyst tracking request when replying a post on a message board. Enherits CustomLinkCriteria
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MessageBoardReplyPostCriteria.#ctor">
            <summary>
            Constructs a object with necessary criteria to identify SiteCatalyst tracking request when replying a post on a message board.
            Use fluent interface to add additonal criteria to this object thus making the test more reliable.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.CustomLinkCriteria">
            <summary>
            Object containing necessary criteria to identify SiteCatalyst tracking request when clicking a custom link. Used as base class for more spaecialized criteria and should be used instead if possible.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.IPageStatsCriteria">
            <summary>
                Stores a information about a criteria in relationship with a collection of SiteCatalyst requests
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.IPageStatsCriteria.Count">
            <summary>
                Number of SiteCatalyst request the criteria should match.
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.IPageStatsCriteria.Indexes">
            <summary>
                Where in collection of SiteCatalyst request the criteria should match. Null means any index
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.IPageStatsCriteria.Criteria">
            <summary>
                The criteria to match.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.MessageBoardAddPostCriteria">
            <summary>
            Object containing necessary criteria to identify SiteCatalyst tracking request when adding a post on a message board. Enherits CustomLinkCriteria
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MessageBoardAddPostCriteria.#ctor">
            <summary>
            Constructs a object with necessary criteria to identify SiteCatalyst tracking request when adding a post on a message board.
            Use fluent interface to add additonal criteria to this object thus making the test more reliable.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria">
            <summary>
            Object containing methods to set criteria to match SiteCatalyst tracking request when submitting a Nps survey
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer1(System.String)">
            <summary>
            Describe Yourself 
            </summary>
            <param name="answer">1 based answer number</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer3(System.String)">
            <summary>
            Likely Recommend  
            </summary>
            <param name="answer">1 based answer number</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer4(System.String)">
            <summary>
            Say Good Things 
            </summary>
            <param name="answer">1 based answer number</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer5(System.String)">
            <summary>
            Was There A Glitch Or Error
            </summary>
            <param name="answer">true or false</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer6(System.String)">
            <summary>
            Were You Able To Do What You Wanted To Do
            </summary>
            <param name="answer">1 based answer number</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer7(System.String)">
            <summary>
            Ability To Do  
            </summary>
            <param name="answer">true or false</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer8(System.String)">
            <summary>
            Where did you spend most time on LEGO.com today 
            </summary>
            <param name="answer">true or false</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer9(System.String)">
            <summary>
            Bought Received LEGO Sets 
            </summary>
            <param name="answer">true or false</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer10(System.String)">
            <summary>
            Number Of LEGO Sets 
            </summary>
            <param name="answer">1 based answer number</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer12(System.String)">
            <summary>
            Gender 
            </summary>
            <param name="answer">1 or 2</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.NpsSurveySubmitCriteria.Answer13(System.String)">
            <summary>
            How Old Are You 
            </summary>
            <param name="answer">1 based answer number</param>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.PageStatsCriteria">
            <summary>
                Stores information about a criteria in relationship with a collection of SiteCatalyst requests
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.PageStatsCriteria.#ctor(SeleniumBase.Tracking.Criteria.ICriteria,System.Int32,System.Int32[])">
            <summary>
                Constructs an object storing information about a criteria in relationship with a collection of SiteCatalyst
                requests.
            </summary>
            <param name="criteria">The criteria to match.</param>
            <param name="count">Number of SiteCatalyst request the criteria should match.</param>
            <param name="indexes">
                Where in collection of SiteCatalyst request the criteria should match. Leave blank for any
                indexes
            </param>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.PageStatsCriteria.Count">
            <summary>
            The number of expected SiteCatalyst requests to match the given criteria
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.PageStatsCriteria.Indexes">
            <summary>
            The expected indexes of the captured SiteCatalyst requests where the given criteria match
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Criteria.PageStatsCriteria.Criteria">
            <summary>
            A Criteria to match against a collection of captured SiteCatalyst requests
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.ParentsActivationCriteria">
            <summary>
            Triggered when clicking accept or cancel on parents activation page
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.ProductCodeCriteria">
            <summary>
            Criteria which matches SiteCatalyst requests on entering product codes on LEGO websites
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.ProductCodeCriteria.#ctor">
            <summary>
            Constructs a object with necessary criteria to identify SiteCatalyst tracking request when entering a product codes on LEGO websites.
            Use fluent interface to add additonal criteria to this object thus making the test more reliable.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Event">
            <summary>
            Contains string constants of LEGO SiteCatalyst events
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Event.Number(System.Int32)">
            <summary>
            Custom events
            </summary>
            <param name="number">event number</param>
            <returns>new custom event</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.Event.Value(System.Object)">
            <summary>
            Assign a value to an event.
            </summary>
            <param name="value">the value to assign to the event ex. 10</param>
            <returns>A new event with value like ex. event4=10</returns>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.GoToCheckout">
            <summary>
            Used in checkout flow on Shop pages
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.AddToCart">
            <summary>
            Used when a product is added to the shopping cart
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.RemoveFromCart">
            <summary>
            Used when a product is removed from the shopping cart
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.OpenCart">
            <summary>
            Used when the first product is added to the cart
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ViewCart">
            <summary>
            Used on the cart page
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.PurchaseCompleted">
            <summary>
            Used on the receipt page on shop sites
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ProductView">
            <summary>
            Used on product details pages
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.TellAFriend">
            <summary>
            Reports and Analytics Custom event1
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.GalleryUpload">
            <summary>
            Reports and Analytics Custom event2
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.InternalSearch">
            <summary>
            Reports and Analytics Custom event3
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.CustomProductView">
            <summary>
            Reports and Analytics Custom event4
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.Signup">
            <summary>
            Reports and Analytics Custom event5
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.Discount">
            <summary>
            Reports and Analytics Custom event6
            Used on the receipt page on shop sites
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ShippingCost">
            <summary>
            Reports and Analytics Custom event7
            Used on the receipt page on shop sites
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ContentProdView">
            <summary>
            Reports and Analytics Custom event8
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.FormSubmission">
            <summary>
            Reports and Analytics Custom event9
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.LUFreePlay">
            <summary>
            Reports and Analytics Custom event10
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ResponsysSent">
            <summary>
            Reports and Analytics Custom event11
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ResponsysDelivered">
            <summary>
            Reports and Analytics Custom event12
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ResponsysOpened">
            <summary>
            Reports and Analytics Custom event13
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ResponsysClicked">
            <summary>
            Reports and Analytics Custom event14
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ResponsysUnsubscribed">
            <summary>
            Reports and Analytics Custom event15
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ResponsysTotalBounces">
            <summary>
            Reports and Analytics Custom event
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpInitiated">
            <summary>
            Reports and Analytics Custom event17
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpConfirmDOB">
            <summary>
            Reports and Analytics Custom event18
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpUnder13Submit">
            <summary>
            Reports and Analytics Custom event19
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpAbove13Submit">
            <summary>
            Reports and Analytics Custom event20
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpAbove13Complete">
            <summary>
            Reports and Analytics Custom event21
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpParentActivationScreen">
            <summary>
            Reports and Analytics Custom event22
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpParentActivationCancel">
            <summary>
            Reports and Analytics Custom event23
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpParentActivationActivate">
            <summary>
            Reports and Analytics Custom event24
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SignUpParentActivationComplete">
            <summary>
            Reports and Analytics Custom event25
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.GamePlay">
            <summary>
            Reports and Analytics Custom event26
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.VideoViewsOld">
            <summary>
            Reports and Analytics Custom event27
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.AddToWishlist">
            <summary>
            Reports and Analytics Custom event28
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ClubSignUp">
            <summary>
            Reports and Analytics Custom event29
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ProductCodes">
            <summary>
            Reports and Analytics Custom event30
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ComicViews">
            <summary>
            Reports and Analytics Custom event31
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.CreateComicCaption">
            <summary>
            Reports and Analytics Custom event32
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.AskMaxAQuestion">
            <summary>
            Reports and Analytics Custom event33
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.CreateHeroReconFigure">
            <summary>
            Reports and Analytics Custom event34
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.AddGalleryCreationsComment">
            <summary>
            Reports and Analytics Custom event35
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.RateGalleryCreation">
            <summary>
            Reports and Analytics Custom event36
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.PostMessageBoardsMessage">
            <summary>
            Reports and Analytics Custom event37
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ProductCodeSuccess">
            <summary>
            Reports and Analytics Custom event38
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ReplayingGame">
            <summary>
            Reports and Analytics Custom event39
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.RemoveFromWishlist">
            <summary>
            Reports and Analytics Custom event40
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.VideoViews">
            <summary>
            Reports and Analytics Custom event41
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.VideoSegmentViews">
            <summary>
            Reports and Analytics Custom event42
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.VideoTimeViewed">
            <summary>
            Reports and Analytics Custom event43
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.MediaMilestone25">
            <summary>
            Reports and Analytics Custom event44
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.MediaMilestone50">
            <summary>
            Reports and Analytics Custom event45
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.MediaMilestone75">
            <summary>
            Reports and Analytics Custom event46
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.VideoCompletes">
            <summary>
            Reports and Analytics Custom event47
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.UnityNotInstalled">
            <summary>
            Reports and Analytics Custom event48
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.UnitySuccessfullyInstalled">
            <summary>
            Reports and Analytics Custom event49
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.UnityCapabilityDetected">
            <summary>
            Reports and Analytics Custom event50
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ContentShared">
            <summary>
            Reports and Analytics Custom event51
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.RecommendationClick">
            <summary>
            Reports and Analytics Custom event52
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.CatalogueAddedToWishList">
            <summary>
            Reports and Analytics Custom event53
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.PrintedCatalogueWishList">
            <summary>
            Reports and Analytics Custom event54
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.SMSUserSignup">
            <summary>
            Reports and Analytics Custom event55
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.LithiumLikePost">
            <summary>
            Reports and Analytics Custom event56
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.LithiumReplyPost">
            <summary>
            Reports and Analytics Custom event57
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.LithiumAddPost">
            <summary>
            Reports and Analytics Custom event58
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.LithiumAddPollVote">
            <summary>
            Reports and Analytics Custom event59
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.ShopSearchNullResults">
            <summary>
            Reports and Analytics Custom event60
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.MediaLengthSec">
            <summary>
            Reports and Analytics Custom event61
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.QuickView">
            <summary>
            Reports and Analytics Custom event62
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.Event.TrackingError">
            <summary>
            Reports and Analytics Custom event100
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.IPageStatsProxy">
            <summary>
                Filters SiteCatalyst request from Fiddler Http proxy
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsProxy.Start(System.Int32)">
            <summary>
                Stats Fiddler if not already started
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsProxy.Stop">
            <summary>
                Stops Fiddler if not already stopped
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsProxy.AttachList(SeleniumBase.Tracking.IPageStats)">
            <summary>
            Attaches the Add method of a pagestats instance to receive incomming tracking requests
            </summary>
            <param name="pageStats">An instance of a IPageStats implementation</param>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsProxy.DetachList(SeleniumBase.Tracking.IPageStats)">
            <summary>
            Detaches the Add method of a pagestats instance to not receive incomming tracking requests
            </summary>
            <param name="pageStats">An instance of a IPageStats implementation</param>
        </member>
        <member name="P:SeleniumBase.Tracking.IPageStatsProxy.ListenPort">
            <summary>
            The port on which this instance is listening
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.PageStatsHandler">
            <summary>
                Method to call when new SiteCatalyst request is capture and passed
            </summary>
            <param name="pageStat">The passed SiteCatalyst request</param>
        </member>
        <member name="T:SeleniumBase.Services.IThreadServices">
            <summary>
                Singleton wrapper for System.Threading.Thread
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.IThreadServices.Sleep(System.Int32)">
            <summary>
                Pauses execution thread
            </summary>
            <param name="millisecondsTimeout">Time to sleep</param>
        </member>
        <member name="T:SeleniumBase.Tracking.PageStats">
            <summary>
            Collects SiteCatalyst requests by filtering requests from WebProxy. Threadsafe
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.IPageStats">
            <summary>
            Collects SiteCatalyst requests by filtering requests from WebProxy. Threadsafe
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStats.Add(LEGO.Web.Analytics.FiddlerExtension.Parser.ISessionInfo)">
            <summary>
            Threadsafe method to add tracking session to current collection
            </summary>
            <param name="trackingSession"></param>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStats.Remove">
            <summary>
            Copies and clears the list of captured SiteCatalyst requests
            </summary>
            <returns>A copy of the captured SiteCatalyst requests</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStats.AllMatching(SeleniumBase.Tracking.Criteria.ICriteria)">
            <summary>
            Seeks through all captured PageStats matching against criteria
            </summary>
            <param name="criteria">Criteria to match</param>
            <returns>All captured PageStats matching criteria</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStats.ResetTimer">
            <summary>
            Reset the timer used to timestamp SiteCatalyst requests.
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStats.Clear">
            <summary>
            Clears the list of all captured PageStats
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStats.StartCapturing">
            <summary>
            Stops the capturing of PageStats. Default on startup.
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStats.StopCapturing">
            <summary>
            Starts the capturing of PageStats
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.IPageStats.All">
            <summary>
            All captured PageStats
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.IPageStats.TimeElapsed">
            <summary>
            Table containing timestamps for captured SiteCatalyst requests
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.ResetTimer">
            <summary>
            Reset the timer used to timestamp SiteCatalyst requests.
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.#ctor(System.Collections.Generic.IEnumerable{LEGO.Web.Analytics.FiddlerExtension.Parser.ISessionInfo},System.Boolean)">
            <summary>
            Creates a new instance with an existing collection of SiteCatalyst requests
            </summary>
            <param name="sessions">An existing collection of SiteCatalyst request, will be copied to an internal collection</param>
            <param name="captureOnStartup">The Http proxy the connect to</param>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.#ctor(System.Boolean)">
            <summary>
            Creates a new instance with an empty collection of SiteCatalyst requests
            </summary>
            <param name="captureOnStartup"></param>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.Clear">
            <summary>
            Clears the list of all captured PageStats
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.StopCapturing">
            <summary>
            Starts the capturing of PageStats
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.StartCapturing">
            <summary>
            Stops the capturing of PageStats. Default on startup.
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.Remove">
            <summary>
            Copies and clears the list of captured SiteCatalyst requests
            </summary>
            <returns>A copy of the captured SiteCatalyst requests</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.AllMatching(SeleniumBase.Tracking.Criteria.ICriteria)">
            <summary>
            Seeks through all captured PageStats matching against criteria
            </summary>
            <param name="criteria">Criteria to match</param>
            <returns>All captured PageStats matching criteria</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStats.Add(LEGO.Web.Analytics.FiddlerExtension.Parser.ISessionInfo)">
            <summary>
            Threadsafe method to add tracking session to current collection
            </summary>
            <param name="pageStat"></param>
        </member>
        <member name="P:SeleniumBase.Tracking.PageStats.TimeElapsed">
            <summary>
            Table containing timestamps for captured SiteCatalyst requests
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.PageStats.All">
            <summary>
            All captured PageStats
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.PageStatsProxy">
            <summary>
                Singleton object that filters SiteCatalyst requests from Fiddler Http proxy
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStatsProxy.#ctor">
            <summary>
            Constructs a PageStatsProxy. Hooks into Fiddler and listens before each request is sent
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStatsProxy.Start(System.Int32)">
            <summary>
                Stats Fiddler if not already started
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStatsProxy.Stop">
            <summary>
                Stops Fiddler if not already stopped
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStatsProxy.GetInstance">
            <summary>
                Singleton constructor
            </summary>
            <returns>The one and only ;) </returns>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStatsProxy.AttachList(SeleniumBase.Tracking.IPageStats)">
            <summary>
            Attaches the Add method of a pagestats instance to receive incomming tracking requests
            </summary>
            <param name="pageStats">An instance of a IPageStats implementation</param>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStatsProxy.DetachList(SeleniumBase.Tracking.IPageStats)">
            <summary>
            Detaches the Add method of a pagestats instance to not receive incomming tracking requests
            </summary>
            <param name="pageStats">An instance of a IPageStats implementation</param>
        </member>
        <member name="E:SeleniumBase.Tracking.PageStatsProxy.OnPageStat">
            <summary>
                Occures when a new SiteCatalyst request is captured and passed as ISessionInfo object
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.PageStatsProxy.ListenPort">
            <summary>
            The port on which this instance is listening
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.SocialMedia">
            <summary>
            List of social media features currently used by LEGO this list will propably expand a long the way
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.SocialMedia.Facebook">
            <summary>
            Facebook
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.SocialMedia.Twitter">
            <summary>
            Twitter
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.SocialMedia.Google">
            <summary>
            Google
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.SocialMedia.LinkedIn">
            <summary>
            LinkedIn
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.IPageStatsValidator">
            <summary>
                Validates Pagestats and summarizes a result
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqualExcept(LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties[])">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="exceptions">Additional properties to exclude from equality comparison</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqualExcept(System.Collections.Generic.IEnumerable{LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties})">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="exceptions">Additional properties to exclude from equality comparison</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqualExcept(System.Int32,System.Int32,LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties[])">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="index1">SiteCatalyst request 1</param>
            <param name="index2">SiteCatalyst request 2</param>
            <param name="exceptions">Additional properties to exclude from equality comparison</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqualExcept(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties})">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="index1">SiteCatalyst request 1</param>
            <param name="index2">SiteCatalyst request 2</param>
            <param name="exceptions">Additional properties to exclude from equality comparison</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqual(LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties[])">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="selections">Specifig properties to include in equality comparison. None will validate all</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqual(System.Collections.Generic.IEnumerable{LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties})">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="selections">Specifig properties to include in equality comparison. None will validate all</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqual(System.Int32,System.Int32,LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties[])">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="index1">SiteCatalyst request 1</param>
            <param name="index2">SiteCatalyst request 2</param>
            <param name="selections">Specifig properties to include in equality comparison. None will validate all</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqual(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties})">
            <summary>
                Validates if all properties on all captured SiteCatalyst request is equal except Time(c1) and UrlLength
            </summary>
            <param name="index1">SiteCatalyst request 1</param>
            <param name="index2">SiteCatalyst request 2</param>
            <param name="selections">Specifig properties to include in equality comparison. None will validate all</param>
            <returns></returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqual(SeleniumBase.Tracking.IPageStats,SeleniumBase.Tracking.Criteria.ICriteria,LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties[])">
            <summary>
                Validates equality of corresponding properties of two requests on same index of two collections
            </summary>
            <param name="pageStats2">Collection of requests</param>
            <param name="criteria">Only test equality on PageStats matching criteria</param>
            <param name="exceptions">The SC names to exclude from comparison</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.IsEqual(SeleniumBase.Tracking.IPageStats,SeleniumBase.Tracking.Criteria.ICriteria,System.Collections.Generic.IEnumerable{LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties})">
            <summary>
                Validates equality of corresponding properties of two requests on same index of two collections
            </summary>
            <param name="pageStats2">Collection of requests</param>
            <param name="criteria">Only test equality on PageStats matching criteria</param>
            <param name="exceptions">The SC names to exclude from comparison</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.Match(SeleniumBase.Tracking.Criteria.ICriteria,System.Int32)">
            <summary>
                Validates that the count of PageStats matching given criteria are exact equal to expected count
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <param name="countExact">Expected count of PageStats to match criteria</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.Match(SeleniumBase.Tracking.Criteria.ICriteria,System.Int32,System.Int32)">
            <summary>
                Validates that the count of PageStats matching given criteria are within given range
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <param name="countMin">Minimum expected PageStats to match criteria</param>
            <param name="countMax">Maximum expected PageStats to match criteria</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchIndex(SeleniumBase.Tracking.Criteria.ICriteria,System.Int32)">
            <summary>
                Validates that the PageStat on the given index matches the criteria
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <param name="index">The index of the SiteCatalyst request to match against the criteria</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchIndex(SeleniumBase.Tracking.Criteria.ICriteria,System.Int32[])">
            <summary>
                Validates that the PageStat on the given index matches the criteria
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <param name="indexes">The indexes in the list of SiteCatalyst request to match against the criteria</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchExclusive(SeleniumBase.Tracking.Criteria.ICriteria,System.Int32)">
            <summary>
                Validates that the count of all PageStats matching given criteria are exact equal to expected count
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <param name="countExact">Expected count of PageStats to match criteria</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchExclusive(SeleniumBase.Tracking.Criteria.ICriteria,System.Int32,System.Int32)">
            <summary>
                Validates that the count of all PageStats matching given criteria are within given range
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <param name="countMin">Minimum expected PageStats to match criteria</param>
            <param name="countMax">Maximum expected PageStats to match criteria</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchExclusive(SeleniumBase.Tracking.Criteria.ICriteria[])">
            <summary>
                Validates that the only PageStats matching given criteria are present
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchExclusive(System.Collections.Generic.IEnumerable{SeleniumBase.Tracking.Criteria.ICriteria})">
            <summary>
                Validates that the only PageStats matching given criteria are present
            </summary>
            <param name="trackingCriteria">Criteria to match</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchExclusive(SeleniumBase.Tracking.Criteria.IPageStatsCriteria[])">
            <summary>
                Validates that the only PageStats matching given criteria are present
            </summary>
            <param name="pageStatsCriteria">Criteria to match</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.MatchExclusive(System.Collections.Generic.IEnumerable{SeleniumBase.Tracking.Criteria.IPageStatsCriteria})">
            <summary>
                Validates that the only PageStats matching given criteria are present
            </summary>
            <param name="pageStatsCriteria">Criteria to match</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.Count(System.Int32)">
            <summary>
                Validates that the count of PageStats equals expected count
            </summary>
            <param name="countExact">Expected count of PageStats</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.Count(System.Int32,System.Int32)">
            <summary>
                Validates that the count of PageStats are within expected range
            </summary>
            <param name="countMin">Minimum expected PageStats to match criteria</param>
            <param name="countMax">Maximum expected PageStats to match criteria</param>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.Validate">
            <summary>
                Validates all present PageStats
            </summary>
            <returns>this</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.IPageStatsValidator.GetResult">
            <summary>
                Validation report. Call this method when finished all validations.
            </summary>
            <returns>Report containing a verdict and information about failed validations</returns>
        </member>
        <member name="T:SeleniumBase.Tracking.TestMessages">
            <summary>
            Collection of test messages to ensure consistent test result messages between methods
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.TestMessages.Expected_x_y_ButFound_z(System.Object,System.Object,System.Object)">
            <summary>
            Example input: x = 1, y = "Add to wishlist event", z = 2
            Example output: Expected 1 Add to wishlist event but found 2
            </summary>
            <param name="x">Expected value</param>
            <param name="y">Item expected</param>
            <param name="z">Actual value</param>
            <returns>Expected {x} {y} but found {z}</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.TestMessages.ExpectedAtLeast_x_y_ButFound_z(System.Object,System.Object,System.Object)">
            <summary>
            Example input: x = 1, y = "Add to wishlist event", z = 2
            Example output: Expected at least 1 Add to wishlist event but found 2
            </summary>
            <param name="x">Expected value</param>
            <param name="y">Item expected</param>
            <param name="z">Actual value</param>
            <returns>Expected at least {x} {y} but found {z}</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.TestMessages.ExpectedAtMost_x_y_ButFound_z(System.Object,System.Object,System.Object)">
            <summary>
            Example input: x = 1, y = "Add to wishlist event", z = 2
            Example output: Expected at most 1 Add to wishlist event but found 2
            </summary>
            <param name="x">Expected value</param>
            <param name="y">Item expected</param>
            <param name="z">Actual value</param>
            <returns>Expected at most {x} {y} but found {z}</returns>
        </member>
        <member name="M:SeleniumBase.Tracking.TestMessages.ExpectedToFindA_x_ButDidnt(System.Object)">
            <summary>
            Example input: x = "Add to wishlist event"
            Example output: Expected a Add to wishlist event but didn't
            </summary>
            <param name="x">Expected value</param>
            <returns>Expected to find a {x} but didn't</returns>
        </member>
        <member name="T:SeleniumBase.Tracking.TestResult">
            <summary>
            Stores the verdict and a message explaning the why the tast faild
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.TestResult.Verdict">
            <summary>
            The result testing all the criteria
            </summary>
        </member>
        <member name="P:SeleniumBase.Tracking.TestResult.Messages">
            <summary>
            Description about why the test failed, if the test fails.
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.Criterion">
            <summary>
            Contains criterion for a single PageStats property
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.MediaCriteria">
            <summary>
                Object containing criteria that match SiteCatalyst media tracking requests
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MediaCriteria.#ctor">
            <summary>
                Constructs a object with necessary criteria to identify SiteCatalyst tracking request triggered by playing media
                content.
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MediaCriteria.#ctor(System.Double,System.String,SeleniumBase.Tracking.Criteria.MileStone)">
            <summary>
            Use this contructor to match SiteCatalyst requests triggered by position passing a milestone ex. 25% of movie viewed
            </summary>
            <param name="mediaLength">The total length of the media</param>
            <param name="mediaName">The name of the media</param>
            <param name="mileStone">The milestone passed that triggered the SiteCatalyst request to match</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MediaCriteria.#ctor(System.Double,System.String,SeleniumBase.Tracking.Criteria.MediaSegment)">
            <summary>
            Use this contructor to match SiteCatalyst requests triggered by position leaving current segment.  Note if 100%, then use constructor accepting Milestones instead.
            </summary>
            <param name="mediaLength">The total length of the media</param>
            <param name="mediaName">The name of the media</param>
            <param name="segment">The segment triggered the request</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MediaCriteria.SetMediaSegment(SeleniumBase.Tracking.Criteria.MediaSegment)">
            <summary>
                Set criteria to identify SiteCatalyst tracking request triggered by position leaving
                a time segment.  Note if 100%, then use constructor accepting Milestones instead.
            </summary>
            <param name="segment">The time segment in the media content where the tracking request occures ex. "One" for 0 - 25 %</param>
        </member>
        <member name="M:SeleniumBase.Tracking.Criteria.MediaCriteria.SetMediaMileStone(SeleniumBase.Tracking.Criteria.MileStone)">
            <summary>
                Set criteria to identify SiteCatalyst tracking request triggered by passing a media
                milestone.
            </summary>
            <param name="mileStone">The milestone that triggered the SiteCatalyst request</param>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.MileStone">
            <summary>
                Indicators for position in time in media content
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MileStone.None">
            <summary>
                Milestone not passed
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MileStone.Started">
            <summary>
                Occurres when the media is started
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MileStone.Passed25">
            <summary>
                Occurres when position is passing the 25 % milestone
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MileStone.Passed50">
            <summary>
                Occurres when position is passing the 50 % milestone
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MileStone.Passed75">
            <summary>
                Occurres when position is passing the 75 % milestone
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MileStone.Completed">
            <summary>
                Occurres when the media has completed
            </summary>
        </member>
        <member name="T:SeleniumBase.Tracking.Criteria.MediaSegment">
            <summary>
                Indicators for marking crossing milestones in time in media content
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MediaSegment.Any">
            <summary>
                Match all segments
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MediaSegment.One">
            <summary>
                Occurres when position is leaves the 0 - 25 % time segment
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MediaSegment.Two">
            <summary>
                Occurres when position is leaves the 25 - 50 % time segment
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MediaSegment.Tree">
            <summary>
                Occurres when position is leaves the 50 - 75 % time segment
            </summary>
        </member>
        <member name="F:SeleniumBase.Tracking.Criteria.MediaSegment.Four">
            <summary>
                Occurres when position is leaves the 75 - 100 % time segment
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.PageStatsValidator.#ctor(SeleniumBase.Services.IThreadServices)">
            <summary>
            DI constructor
            </summary>
            <param name="threadServices">the stub</param>
        </member>
        <member name="T:SeleniumBase.Services.ThreadServices">
            <summary>
                Singleton wrapper for System.Threading.Thread
            </summary>
        </member>
        <member name="M:SeleniumBase.Services.ThreadServices.Sleep(System.Int32)">
            <summary>
                Pauses execution thread
            </summary>
            <param name="millisecondsTimeout">Time to sleep</param>
        </member>
        <member name="M:SeleniumBase.Services.ThreadServices.GetInstance">
            <summary>
                Singleton constructor
            </summary>
            <returns>The one and only ;)</returns>
        </member>
        <member name="T:SeleniumBase.Tracking.Assertion.PageStatsAssert">
            <summary>
            Methods for asserting collections of tracking requests
            </summary>
        </member>
        <member name="M:SeleniumBase.Tracking.Assertion.PageStatsAssert.AssertIsEqualIgnoring(System.Collections.Generic.List{LEGO.Web.Analytics.FiddlerExtension.Parser.ISessionInfo},System.Collections.Generic.IEnumerable{LEGO.Web.Analytics.FiddlerExtension.Rules.PageRules.StatProperties})">
            <summary>
            Asserts the equality of two properties
            </summary>
            <param name="pageStats"></param>
            <param name="ignored"></param>
            <returns></returns>
        </member>
        <member name="T:SeleniumBase.Utility">
            <summary>
                Utility class that contains usefull functionality
            </summary>
        </member>
        <member name="M:SeleniumBase.Utility.GetBuildNumber(System.String)">
            <summary>
                Get the current build number
            </summary>
            <param name="baseUrl">e.g. 'https://account2.lego.com/en-us'</param>
            <returns>Current build number or day of year if not available</returns>
        </member>
    </members>
</doc>
